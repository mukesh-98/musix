{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { deepmerge, elementAcceptingRef } from '@material-ui/utils';\nimport { fade } from '../styles/colorManipulator';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nimport Grow from '../Grow';\nimport Popper from '../Popper';\nimport useForkRef from '../utils/useForkRef';\nimport useId from '../utils/unstable_useId';\nimport setRef from '../utils/setRef';\nimport useIsFocusVisible from '../utils/useIsFocusVisible';\nimport useControlled from '../utils/useControlled';\nimport useTheme from '../styles/useTheme';\n\nfunction round(value) {\n  return Math.round(value * 1e5) / 1e5;\n}\n\nfunction arrowGenerator() {\n  return {\n    '&[x-placement*=\"bottom\"] $arrow': {\n      top: 0,\n      left: 0,\n      marginTop: '-0.71em',\n      marginLeft: 4,\n      marginRight: 4,\n      '&::before': {\n        transformOrigin: '0 100%'\n      }\n    },\n    '&[x-placement*=\"top\"] $arrow': {\n      bottom: 0,\n      left: 0,\n      marginBottom: '-0.71em',\n      marginLeft: 4,\n      marginRight: 4,\n      '&::before': {\n        transformOrigin: '100% 0'\n      }\n    },\n    '&[x-placement*=\"right\"] $arrow': {\n      left: 0,\n      marginLeft: '-0.71em',\n      height: '1em',\n      width: '0.71em',\n      marginTop: 4,\n      marginBottom: 4,\n      '&::before': {\n        transformOrigin: '100% 100%'\n      }\n    },\n    '&[x-placement*=\"left\"] $arrow': {\n      right: 0,\n      marginRight: '-0.71em',\n      height: '1em',\n      width: '0.71em',\n      marginTop: 4,\n      marginBottom: 4,\n      '&::before': {\n        transformOrigin: '0 0'\n      }\n    }\n  };\n}\n\nexport const styles = theme => ({\n  /* Styles applied to the Popper component. */\n  popper: {\n    zIndex: theme.zIndex.tooltip,\n    pointerEvents: 'none' // disable jss-rtl plugin\n\n  },\n\n  /* Styles applied to the Popper component if `interactive={true}`. */\n  popperInteractive: {\n    pointerEvents: 'auto'\n  },\n\n  /* Styles applied to the Popper component if `arrow={true}`. */\n  popperArrow: arrowGenerator(),\n\n  /* Styles applied to the tooltip (label wrapper) element. */\n  tooltip: {\n    backgroundColor: fade(theme.palette.grey[700], 0.9),\n    borderRadius: theme.shape.borderRadius,\n    color: theme.palette.common.white,\n    fontFamily: theme.typography.fontFamily,\n    padding: '4px 8px',\n    fontSize: theme.typography.pxToRem(10),\n    lineHeight: `${round(14 / 10)}em`,\n    maxWidth: 300,\n    wordWrap: 'break-word',\n    fontWeight: theme.typography.fontWeightMedium\n  },\n\n  /* Styles applied to the tooltip (label wrapper) element if `arrow={true}`. */\n  tooltipArrow: {\n    position: 'relative',\n    margin: '0'\n  },\n\n  /* Styles applied to the arrow element. */\n  arrow: {\n    overflow: 'hidden',\n    position: 'absolute',\n    width: '1em',\n    height: '0.71em'\n    /* = width / sqrt(2) = (length of the hypotenuse) */\n    ,\n    boxSizing: 'border-box',\n    color: fade(theme.palette.grey[700], 0.9),\n    '&::before': {\n      content: '\"\"',\n      margin: 'auto',\n      display: 'block',\n      width: '100%',\n      height: '100%',\n      backgroundColor: 'currentColor',\n      transform: 'rotate(45deg)'\n    }\n  },\n\n  /* Styles applied to the tooltip (label wrapper) element if the tooltip is opened by touch. */\n  touch: {\n    padding: '8px 16px',\n    fontSize: theme.typography.pxToRem(14),\n    lineHeight: `${round(16 / 14)}em`,\n    fontWeight: theme.typography.fontWeightRegular\n  },\n\n  /* Styles applied to the tooltip (label wrapper) element if `placement` contains \"left\". */\n  tooltipPlacementLeft: {\n    transformOrigin: 'right center',\n    margin: '0 24px ',\n    [theme.breakpoints.up('sm')]: {\n      margin: '0 14px'\n    }\n  },\n\n  /* Styles applied to the tooltip (label wrapper) element if `placement` contains \"right\". */\n  tooltipPlacementRight: {\n    transformOrigin: 'left center',\n    margin: '0 24px',\n    [theme.breakpoints.up('sm')]: {\n      margin: '0 14px'\n    }\n  },\n\n  /* Styles applied to the tooltip (label wrapper) element if `placement` contains \"top\". */\n  tooltipPlacementTop: {\n    transformOrigin: 'center bottom',\n    margin: '24px 0',\n    [theme.breakpoints.up('sm')]: {\n      margin: '14px 0'\n    }\n  },\n\n  /* Styles applied to the tooltip (label wrapper) element if `placement` contains \"bottom\". */\n  tooltipPlacementBottom: {\n    transformOrigin: 'center top',\n    margin: '24px 0',\n    [theme.breakpoints.up('sm')]: {\n      margin: '14px 0'\n    }\n  }\n});\nlet hystersisOpen = false;\nlet hystersisTimer = null;\nexport function testReset() {\n  hystersisOpen = false;\n  clearTimeout(hystersisTimer);\n}\nconst Tooltip = /*#__PURE__*/React.forwardRef(function Tooltip(props, ref) {\n  const {\n    arrow = false,\n    children,\n    classes,\n    disableFocusListener = false,\n    disableHoverListener = false,\n    disableTouchListener = false,\n    enterDelay = 100,\n    enterNextDelay = 0,\n    enterTouchDelay = 700,\n    id: idProp,\n    interactive = false,\n    leaveDelay = 0,\n    leaveTouchDelay = 1500,\n    onClose,\n    onOpen,\n    open: openProp,\n    placement = 'bottom',\n    PopperComponent = Popper,\n    PopperProps,\n    title,\n    TransitionComponent = Grow,\n    TransitionProps\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"arrow\", \"children\", \"classes\", \"disableFocusListener\", \"disableHoverListener\", \"disableTouchListener\", \"enterDelay\", \"enterNextDelay\", \"enterTouchDelay\", \"id\", \"interactive\", \"leaveDelay\", \"leaveTouchDelay\", \"onClose\", \"onOpen\", \"open\", \"placement\", \"PopperComponent\", \"PopperProps\", \"title\", \"TransitionComponent\", \"TransitionProps\"]);\n\n  const theme = useTheme();\n  const [childNode, setChildNode] = React.useState();\n  const [arrowRef, setArrowRef] = React.useState(null);\n  const ignoreNonTouchEvents = React.useRef(false);\n  const closeTimer = React.useRef();\n  const enterTimer = React.useRef();\n  const leaveTimer = React.useRef();\n  const touchTimer = React.useRef();\n  const [openState, setOpenState] = useControlled({\n    controlled: openProp,\n    default: false,\n    name: 'Tooltip',\n    state: 'open'\n  });\n  let open = openState;\n\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    const {\n      current: isControlled\n    } = React.useRef(openProp !== undefined); // eslint-disable-next-line react-hooks/rules-of-hooks\n\n    React.useEffect(() => {\n      if (childNode && childNode.disabled && !isControlled && title !== '' && childNode.tagName.toLowerCase() === 'button') {\n        console.error(['Material-UI: You are providing a disabled `button` child to the Tooltip component.', 'A disabled element does not fire events.', \"Tooltip needs to listen to the child element's events to display the title.\", '', 'Add a simple wrapper element, such as a `span`.'].join('\\n'));\n      }\n    }, [title, childNode, isControlled]);\n  }\n\n  const id = useId(idProp);\n  React.useEffect(() => {\n    return () => {\n      clearTimeout(closeTimer.current);\n      clearTimeout(enterTimer.current);\n      clearTimeout(leaveTimer.current);\n      clearTimeout(touchTimer.current);\n    };\n  }, []);\n\n  const handleOpen = event => {\n    clearTimeout(hystersisTimer);\n    hystersisOpen = true; // The mouseover event will trigger for every nested element in the tooltip.\n    // We can skip rerendering when the tooltip is already open.\n    // We are using the mouseover event instead of the mouseenter event to fix a hide/show issue.\n\n    setOpenState(true);\n\n    if (onOpen) {\n      onOpen(event);\n    }\n  };\n\n  const handleEnter = (forward = true) => event => {\n    const childrenProps = children.props;\n\n    if (event.type === 'mouseover' && childrenProps.onMouseOver && forward) {\n      childrenProps.onMouseOver(event);\n    }\n\n    if (ignoreNonTouchEvents.current && event.type !== 'touchstart') {\n      return;\n    } // Remove the title ahead of time.\n    // We don't want to wait for the next render commit.\n    // We would risk displaying two tooltips at the same time (native + this one).\n\n\n    if (childNode) {\n      childNode.removeAttribute('title');\n    }\n\n    clearTimeout(enterTimer.current);\n    clearTimeout(leaveTimer.current);\n\n    if (enterDelay || hystersisOpen && enterNextDelay) {\n      event.persist();\n      enterTimer.current = setTimeout(() => {\n        handleOpen(event);\n      }, hystersisOpen ? enterNextDelay : enterDelay);\n    } else {\n      handleOpen(event);\n    }\n  };\n\n  const {\n    isFocusVisible,\n    onBlurVisible,\n    ref: focusVisibleRef\n  } = useIsFocusVisible();\n  const [childIsFocusVisible, setChildIsFocusVisible] = React.useState(false);\n\n  const handleBlur = () => {\n    if (childIsFocusVisible) {\n      setChildIsFocusVisible(false);\n      onBlurVisible();\n    }\n  };\n\n  const handleFocus = (forward = true) => event => {\n    // Workaround for https://github.com/facebook/react/issues/7769\n    // The autoFocus of React might trigger the event before the componentDidMount.\n    // We need to account for this eventuality.\n    if (!childNode) {\n      setChildNode(event.currentTarget);\n    }\n\n    if (isFocusVisible(event)) {\n      setChildIsFocusVisible(true);\n      handleEnter()(event);\n    }\n\n    const childrenProps = children.props;\n\n    if (childrenProps.onFocus && forward) {\n      childrenProps.onFocus(event);\n    }\n  };\n\n  const handleClose = event => {\n    clearTimeout(hystersisTimer);\n    hystersisTimer = setTimeout(() => {\n      hystersisOpen = false;\n    }, 800 + leaveDelay);\n    setOpenState(false);\n\n    if (onClose) {\n      onClose(event);\n    }\n\n    clearTimeout(closeTimer.current);\n    closeTimer.current = setTimeout(() => {\n      ignoreNonTouchEvents.current = false;\n    }, theme.transitions.duration.shortest);\n  };\n\n  const handleLeave = (forward = true) => event => {\n    const childrenProps = children.props;\n\n    if (event.type === 'blur') {\n      if (childrenProps.onBlur && forward) {\n        childrenProps.onBlur(event);\n      }\n\n      handleBlur();\n    }\n\n    if (event.type === 'mouseleave' && childrenProps.onMouseLeave && event.currentTarget === childNode) {\n      childrenProps.onMouseLeave(event);\n    }\n\n    clearTimeout(enterTimer.current);\n    clearTimeout(leaveTimer.current);\n    event.persist();\n    leaveTimer.current = setTimeout(() => {\n      handleClose(event);\n    }, leaveDelay);\n  };\n\n  const detectTouchStart = event => {\n    ignoreNonTouchEvents.current = true;\n    const childrenProps = children.props;\n\n    if (childrenProps.onTouchStart) {\n      childrenProps.onTouchStart(event);\n    }\n  };\n\n  const handleTouchStart = event => {\n    detectTouchStart(event);\n    clearTimeout(leaveTimer.current);\n    clearTimeout(closeTimer.current);\n    clearTimeout(touchTimer.current);\n    event.persist();\n    touchTimer.current = setTimeout(() => {\n      handleEnter()(event);\n    }, enterTouchDelay);\n  };\n\n  const handleTouchEnd = event => {\n    if (children.props.onTouchEnd) {\n      children.props.onTouchEnd(event);\n    }\n\n    clearTimeout(touchTimer.current);\n    clearTimeout(leaveTimer.current);\n    event.persist();\n    leaveTimer.current = setTimeout(() => {\n      handleClose(event);\n    }, leaveTouchDelay);\n  };\n\n  const handleUseRef = useForkRef(setChildNode, ref);\n  const handleFocusRef = useForkRef(focusVisibleRef, handleUseRef); // can be removed once we drop support for non ref forwarding class components\n\n  const handleOwnRef = React.useCallback(instance => {\n    // #StrictMode ready\n    setRef(handleFocusRef, ReactDOM.findDOMNode(instance));\n  }, [handleFocusRef]);\n  const handleRef = useForkRef(children.ref, handleOwnRef); // There is no point in displaying an empty tooltip.\n\n  if (title === '') {\n    open = false;\n  } // For accessibility and SEO concerns, we render the title to the DOM node when\n  // the tooltip is hidden. However, we have made a tradeoff when\n  // `disableHoverListener` is set. This title logic is disabled.\n  // It's allowing us to keep the implementation size minimal.\n  // We are open to change the tradeoff.\n\n\n  const shouldShowNativeTitle = !open && !disableHoverListener;\n\n  const childrenProps = _extends({\n    'aria-describedby': open ? id : null,\n    title: shouldShowNativeTitle && typeof title === 'string' ? title : null\n  }, other, children.props, {\n    className: clsx(other.className, children.props.className),\n    onTouchStart: detectTouchStart,\n    ref: handleRef\n  });\n\n  const interactiveWrapperListeners = {};\n\n  if (!disableTouchListener) {\n    childrenProps.onTouchStart = handleTouchStart;\n    childrenProps.onTouchEnd = handleTouchEnd;\n  }\n\n  if (!disableHoverListener) {\n    childrenProps.onMouseOver = handleEnter();\n    childrenProps.onMouseLeave = handleLeave();\n\n    if (interactive) {\n      interactiveWrapperListeners.onMouseOver = handleEnter(false);\n      interactiveWrapperListeners.onMouseLeave = handleLeave(false);\n    }\n  }\n\n  if (!disableFocusListener) {\n    childrenProps.onFocus = handleFocus();\n    childrenProps.onBlur = handleLeave();\n\n    if (interactive) {\n      interactiveWrapperListeners.onFocus = handleFocus(false);\n      interactiveWrapperListeners.onBlur = handleLeave(false);\n    }\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (children.props.title) {\n      console.error(['Material-UI: You have provided a `title` prop to the child of <Tooltip />.', `Remove this title prop \\`${children.props.title}\\` or the Tooltip component.`].join('\\n'));\n    }\n  }\n\n  const mergedPopperProps = React.useMemo(() => {\n    return deepmerge({\n      popperOptions: {\n        modifiers: {\n          arrow: {\n            enabled: Boolean(arrowRef),\n            element: arrowRef\n          }\n        }\n      }\n    }, PopperProps);\n  }, [arrowRef, PopperProps]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.cloneElement(children, childrenProps), /*#__PURE__*/React.createElement(PopperComponent, _extends({\n    className: clsx(classes.popper, interactive && classes.popperInteractive, arrow && classes.popperArrow),\n    placement: placement,\n    anchorEl: childNode,\n    open: childNode ? open : false,\n    id: childrenProps['aria-describedby'],\n    transition: true\n  }, interactiveWrapperListeners, mergedPopperProps), ({\n    placement: placementInner,\n    TransitionProps: TransitionPropsInner\n  }) => /*#__PURE__*/React.createElement(TransitionComponent, _extends({\n    timeout: theme.transitions.duration.shorter\n  }, TransitionPropsInner, TransitionProps), /*#__PURE__*/React.createElement(\"div\", {\n    className: clsx(classes.tooltip, classes[`tooltipPlacement${capitalize(placementInner.split('-')[0])}`], ignoreNonTouchEvents.current && classes.touch, arrow && classes.tooltipArrow)\n  }, title, arrow ? /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.arrow,\n    ref: setArrowRef\n  }) : null))));\n});\nprocess.env.NODE_ENV !== \"production\" ? Tooltip.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, adds an arrow to the tooltip.\n   */\n  arrow: PropTypes.bool,\n\n  /**\n   * Tooltip reference element.\n   */\n  children: elementAcceptingRef.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * Do not respond to focus events.\n   */\n  disableFocusListener: PropTypes.bool,\n\n  /**\n   * Do not respond to hover events.\n   */\n  disableHoverListener: PropTypes.bool,\n\n  /**\n   * Do not respond to long press touch events.\n   */\n  disableTouchListener: PropTypes.bool,\n\n  /**\n   * The number of milliseconds to wait before showing the tooltip.\n   * This prop won't impact the enter touch delay (`enterTouchDelay`).\n   */\n  enterDelay: PropTypes.number,\n\n  /**\n   * The number of milliseconds to wait before showing the tooltip when one was already recently opened.\n   */\n  enterNextDelay: PropTypes.number,\n\n  /**\n   * The number of milliseconds a user must touch the element before showing the tooltip.\n   */\n  enterTouchDelay: PropTypes.number,\n\n  /**\n   * This prop is used to help implement the accessibility logic.\n   * If you don't provide this prop. It falls back to a randomly generated id.\n   */\n  id: PropTypes.string,\n\n  /**\n   * Makes a tooltip interactive, i.e. will not close when the user\n   * hovers over the tooltip before the `leaveDelay` is expired.\n   */\n  interactive: PropTypes.bool,\n\n  /**\n   * The number of milliseconds to wait before hiding the tooltip.\n   * This prop won't impact the leave touch delay (`leaveTouchDelay`).\n   */\n  leaveDelay: PropTypes.number,\n\n  /**\n   * The number of milliseconds after the user stops touching an element before hiding the tooltip.\n   */\n  leaveTouchDelay: PropTypes.number,\n\n  /**\n   * Callback fired when the component requests to be closed.\n   *\n   * @param {object} event The event source of the callback.\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * Callback fired when the component requests to be open.\n   *\n   * @param {object} event The event source of the callback.\n   */\n  onOpen: PropTypes.func,\n\n  /**\n   * If `true`, the tooltip is shown.\n   */\n  open: PropTypes.bool,\n\n  /**\n   * Tooltip placement.\n   */\n  placement: PropTypes.oneOf(['bottom-end', 'bottom-start', 'bottom', 'left-end', 'left-start', 'left', 'right-end', 'right-start', 'right', 'top-end', 'top-start', 'top']),\n\n  /**\n   * The component used for the popper.\n   */\n  PopperComponent: PropTypes.elementType,\n\n  /**\n   * Props applied to the [`Popper`](/api/popper/) element.\n   */\n  PopperProps: PropTypes.object,\n\n  /**\n   * Tooltip title. Zero-length titles string are never displayed.\n   */\n  title: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .node.isRequired,\n\n  /**\n   * The component used for the transition.\n   * [Follow this guide](/components/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.\n   */\n  TransitionComponent: PropTypes.elementType,\n\n  /**\n   * Props applied to the [`Transition`](http://reactcommunity.org/react-transition-group/transition#Transition-props) element.\n   */\n  TransitionProps: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTooltip',\n  flip: false\n})(Tooltip);","map":{"version":3,"sources":["/home/ovesh/Desktop/MukeshParmar_Project/React/musix/node_modules/@material-ui/core/es/Tooltip/Tooltip.js"],"names":["_extends","_objectWithoutPropertiesLoose","React","ReactDOM","PropTypes","clsx","deepmerge","elementAcceptingRef","fade","withStyles","capitalize","Grow","Popper","useForkRef","useId","setRef","useIsFocusVisible","useControlled","useTheme","round","value","Math","arrowGenerator","top","left","marginTop","marginLeft","marginRight","transformOrigin","bottom","marginBottom","height","width","right","styles","theme","popper","zIndex","tooltip","pointerEvents","popperInteractive","popperArrow","backgroundColor","palette","grey","borderRadius","shape","color","common","white","fontFamily","typography","padding","fontSize","pxToRem","lineHeight","maxWidth","wordWrap","fontWeight","fontWeightMedium","tooltipArrow","position","margin","arrow","overflow","boxSizing","content","display","transform","touch","fontWeightRegular","tooltipPlacementLeft","breakpoints","up","tooltipPlacementRight","tooltipPlacementTop","tooltipPlacementBottom","hystersisOpen","hystersisTimer","testReset","clearTimeout","Tooltip","forwardRef","props","ref","children","classes","disableFocusListener","disableHoverListener","disableTouchListener","enterDelay","enterNextDelay","enterTouchDelay","id","idProp","interactive","leaveDelay","leaveTouchDelay","onClose","onOpen","open","openProp","placement","PopperComponent","PopperProps","title","TransitionComponent","TransitionProps","other","childNode","setChildNode","useState","arrowRef","setArrowRef","ignoreNonTouchEvents","useRef","closeTimer","enterTimer","leaveTimer","touchTimer","openState","setOpenState","controlled","default","name","state","process","env","NODE_ENV","current","isControlled","undefined","useEffect","disabled","tagName","toLowerCase","console","error","join","handleOpen","event","handleEnter","forward","childrenProps","type","onMouseOver","removeAttribute","persist","setTimeout","isFocusVisible","onBlurVisible","focusVisibleRef","childIsFocusVisible","setChildIsFocusVisible","handleBlur","handleFocus","currentTarget","onFocus","handleClose","transitions","duration","shortest","handleLeave","onBlur","onMouseLeave","detectTouchStart","onTouchStart","handleTouchStart","handleTouchEnd","onTouchEnd","handleUseRef","handleFocusRef","handleOwnRef","useCallback","instance","findDOMNode","handleRef","shouldShowNativeTitle","className","interactiveWrapperListeners","mergedPopperProps","useMemo","popperOptions","modifiers","enabled","Boolean","element","createElement","Fragment","cloneElement","anchorEl","transition","placementInner","TransitionPropsInner","timeout","shorter","split","propTypes","bool","isRequired","object","string","number","func","oneOf","elementType","node","flip"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { deepmerge, elementAcceptingRef } from '@material-ui/utils';\nimport { fade } from '../styles/colorManipulator';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nimport Grow from '../Grow';\nimport Popper from '../Popper';\nimport useForkRef from '../utils/useForkRef';\nimport useId from '../utils/unstable_useId';\nimport setRef from '../utils/setRef';\nimport useIsFocusVisible from '../utils/useIsFocusVisible';\nimport useControlled from '../utils/useControlled';\nimport useTheme from '../styles/useTheme';\n\nfunction round(value) {\n  return Math.round(value * 1e5) / 1e5;\n}\n\nfunction arrowGenerator() {\n  return {\n    '&[x-placement*=\"bottom\"] $arrow': {\n      top: 0,\n      left: 0,\n      marginTop: '-0.71em',\n      marginLeft: 4,\n      marginRight: 4,\n      '&::before': {\n        transformOrigin: '0 100%'\n      }\n    },\n    '&[x-placement*=\"top\"] $arrow': {\n      bottom: 0,\n      left: 0,\n      marginBottom: '-0.71em',\n      marginLeft: 4,\n      marginRight: 4,\n      '&::before': {\n        transformOrigin: '100% 0'\n      }\n    },\n    '&[x-placement*=\"right\"] $arrow': {\n      left: 0,\n      marginLeft: '-0.71em',\n      height: '1em',\n      width: '0.71em',\n      marginTop: 4,\n      marginBottom: 4,\n      '&::before': {\n        transformOrigin: '100% 100%'\n      }\n    },\n    '&[x-placement*=\"left\"] $arrow': {\n      right: 0,\n      marginRight: '-0.71em',\n      height: '1em',\n      width: '0.71em',\n      marginTop: 4,\n      marginBottom: 4,\n      '&::before': {\n        transformOrigin: '0 0'\n      }\n    }\n  };\n}\n\nexport const styles = theme => ({\n  /* Styles applied to the Popper component. */\n  popper: {\n    zIndex: theme.zIndex.tooltip,\n    pointerEvents: 'none' // disable jss-rtl plugin\n\n  },\n\n  /* Styles applied to the Popper component if `interactive={true}`. */\n  popperInteractive: {\n    pointerEvents: 'auto'\n  },\n\n  /* Styles applied to the Popper component if `arrow={true}`. */\n  popperArrow: arrowGenerator(),\n\n  /* Styles applied to the tooltip (label wrapper) element. */\n  tooltip: {\n    backgroundColor: fade(theme.palette.grey[700], 0.9),\n    borderRadius: theme.shape.borderRadius,\n    color: theme.palette.common.white,\n    fontFamily: theme.typography.fontFamily,\n    padding: '4px 8px',\n    fontSize: theme.typography.pxToRem(10),\n    lineHeight: `${round(14 / 10)}em`,\n    maxWidth: 300,\n    wordWrap: 'break-word',\n    fontWeight: theme.typography.fontWeightMedium\n  },\n\n  /* Styles applied to the tooltip (label wrapper) element if `arrow={true}`. */\n  tooltipArrow: {\n    position: 'relative',\n    margin: '0'\n  },\n\n  /* Styles applied to the arrow element. */\n  arrow: {\n    overflow: 'hidden',\n    position: 'absolute',\n    width: '1em',\n    height: '0.71em'\n    /* = width / sqrt(2) = (length of the hypotenuse) */\n    ,\n    boxSizing: 'border-box',\n    color: fade(theme.palette.grey[700], 0.9),\n    '&::before': {\n      content: '\"\"',\n      margin: 'auto',\n      display: 'block',\n      width: '100%',\n      height: '100%',\n      backgroundColor: 'currentColor',\n      transform: 'rotate(45deg)'\n    }\n  },\n\n  /* Styles applied to the tooltip (label wrapper) element if the tooltip is opened by touch. */\n  touch: {\n    padding: '8px 16px',\n    fontSize: theme.typography.pxToRem(14),\n    lineHeight: `${round(16 / 14)}em`,\n    fontWeight: theme.typography.fontWeightRegular\n  },\n\n  /* Styles applied to the tooltip (label wrapper) element if `placement` contains \"left\". */\n  tooltipPlacementLeft: {\n    transformOrigin: 'right center',\n    margin: '0 24px ',\n    [theme.breakpoints.up('sm')]: {\n      margin: '0 14px'\n    }\n  },\n\n  /* Styles applied to the tooltip (label wrapper) element if `placement` contains \"right\". */\n  tooltipPlacementRight: {\n    transformOrigin: 'left center',\n    margin: '0 24px',\n    [theme.breakpoints.up('sm')]: {\n      margin: '0 14px'\n    }\n  },\n\n  /* Styles applied to the tooltip (label wrapper) element if `placement` contains \"top\". */\n  tooltipPlacementTop: {\n    transformOrigin: 'center bottom',\n    margin: '24px 0',\n    [theme.breakpoints.up('sm')]: {\n      margin: '14px 0'\n    }\n  },\n\n  /* Styles applied to the tooltip (label wrapper) element if `placement` contains \"bottom\". */\n  tooltipPlacementBottom: {\n    transformOrigin: 'center top',\n    margin: '24px 0',\n    [theme.breakpoints.up('sm')]: {\n      margin: '14px 0'\n    }\n  }\n});\nlet hystersisOpen = false;\nlet hystersisTimer = null;\nexport function testReset() {\n  hystersisOpen = false;\n  clearTimeout(hystersisTimer);\n}\nconst Tooltip = /*#__PURE__*/React.forwardRef(function Tooltip(props, ref) {\n  const {\n    arrow = false,\n    children,\n    classes,\n    disableFocusListener = false,\n    disableHoverListener = false,\n    disableTouchListener = false,\n    enterDelay = 100,\n    enterNextDelay = 0,\n    enterTouchDelay = 700,\n    id: idProp,\n    interactive = false,\n    leaveDelay = 0,\n    leaveTouchDelay = 1500,\n    onClose,\n    onOpen,\n    open: openProp,\n    placement = 'bottom',\n    PopperComponent = Popper,\n    PopperProps,\n    title,\n    TransitionComponent = Grow,\n    TransitionProps\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"arrow\", \"children\", \"classes\", \"disableFocusListener\", \"disableHoverListener\", \"disableTouchListener\", \"enterDelay\", \"enterNextDelay\", \"enterTouchDelay\", \"id\", \"interactive\", \"leaveDelay\", \"leaveTouchDelay\", \"onClose\", \"onOpen\", \"open\", \"placement\", \"PopperComponent\", \"PopperProps\", \"title\", \"TransitionComponent\", \"TransitionProps\"]);\n\n  const theme = useTheme();\n  const [childNode, setChildNode] = React.useState();\n  const [arrowRef, setArrowRef] = React.useState(null);\n  const ignoreNonTouchEvents = React.useRef(false);\n  const closeTimer = React.useRef();\n  const enterTimer = React.useRef();\n  const leaveTimer = React.useRef();\n  const touchTimer = React.useRef();\n  const [openState, setOpenState] = useControlled({\n    controlled: openProp,\n    default: false,\n    name: 'Tooltip',\n    state: 'open'\n  });\n  let open = openState;\n\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    const {\n      current: isControlled\n    } = React.useRef(openProp !== undefined); // eslint-disable-next-line react-hooks/rules-of-hooks\n\n    React.useEffect(() => {\n      if (childNode && childNode.disabled && !isControlled && title !== '' && childNode.tagName.toLowerCase() === 'button') {\n        console.error(['Material-UI: You are providing a disabled `button` child to the Tooltip component.', 'A disabled element does not fire events.', \"Tooltip needs to listen to the child element's events to display the title.\", '', 'Add a simple wrapper element, such as a `span`.'].join('\\n'));\n      }\n    }, [title, childNode, isControlled]);\n  }\n\n  const id = useId(idProp);\n  React.useEffect(() => {\n    return () => {\n      clearTimeout(closeTimer.current);\n      clearTimeout(enterTimer.current);\n      clearTimeout(leaveTimer.current);\n      clearTimeout(touchTimer.current);\n    };\n  }, []);\n\n  const handleOpen = event => {\n    clearTimeout(hystersisTimer);\n    hystersisOpen = true; // The mouseover event will trigger for every nested element in the tooltip.\n    // We can skip rerendering when the tooltip is already open.\n    // We are using the mouseover event instead of the mouseenter event to fix a hide/show issue.\n\n    setOpenState(true);\n\n    if (onOpen) {\n      onOpen(event);\n    }\n  };\n\n  const handleEnter = (forward = true) => event => {\n    const childrenProps = children.props;\n\n    if (event.type === 'mouseover' && childrenProps.onMouseOver && forward) {\n      childrenProps.onMouseOver(event);\n    }\n\n    if (ignoreNonTouchEvents.current && event.type !== 'touchstart') {\n      return;\n    } // Remove the title ahead of time.\n    // We don't want to wait for the next render commit.\n    // We would risk displaying two tooltips at the same time (native + this one).\n\n\n    if (childNode) {\n      childNode.removeAttribute('title');\n    }\n\n    clearTimeout(enterTimer.current);\n    clearTimeout(leaveTimer.current);\n\n    if (enterDelay || hystersisOpen && enterNextDelay) {\n      event.persist();\n      enterTimer.current = setTimeout(() => {\n        handleOpen(event);\n      }, hystersisOpen ? enterNextDelay : enterDelay);\n    } else {\n      handleOpen(event);\n    }\n  };\n\n  const {\n    isFocusVisible,\n    onBlurVisible,\n    ref: focusVisibleRef\n  } = useIsFocusVisible();\n  const [childIsFocusVisible, setChildIsFocusVisible] = React.useState(false);\n\n  const handleBlur = () => {\n    if (childIsFocusVisible) {\n      setChildIsFocusVisible(false);\n      onBlurVisible();\n    }\n  };\n\n  const handleFocus = (forward = true) => event => {\n    // Workaround for https://github.com/facebook/react/issues/7769\n    // The autoFocus of React might trigger the event before the componentDidMount.\n    // We need to account for this eventuality.\n    if (!childNode) {\n      setChildNode(event.currentTarget);\n    }\n\n    if (isFocusVisible(event)) {\n      setChildIsFocusVisible(true);\n      handleEnter()(event);\n    }\n\n    const childrenProps = children.props;\n\n    if (childrenProps.onFocus && forward) {\n      childrenProps.onFocus(event);\n    }\n  };\n\n  const handleClose = event => {\n    clearTimeout(hystersisTimer);\n    hystersisTimer = setTimeout(() => {\n      hystersisOpen = false;\n    }, 800 + leaveDelay);\n    setOpenState(false);\n\n    if (onClose) {\n      onClose(event);\n    }\n\n    clearTimeout(closeTimer.current);\n    closeTimer.current = setTimeout(() => {\n      ignoreNonTouchEvents.current = false;\n    }, theme.transitions.duration.shortest);\n  };\n\n  const handleLeave = (forward = true) => event => {\n    const childrenProps = children.props;\n\n    if (event.type === 'blur') {\n      if (childrenProps.onBlur && forward) {\n        childrenProps.onBlur(event);\n      }\n\n      handleBlur();\n    }\n\n    if (event.type === 'mouseleave' && childrenProps.onMouseLeave && event.currentTarget === childNode) {\n      childrenProps.onMouseLeave(event);\n    }\n\n    clearTimeout(enterTimer.current);\n    clearTimeout(leaveTimer.current);\n    event.persist();\n    leaveTimer.current = setTimeout(() => {\n      handleClose(event);\n    }, leaveDelay);\n  };\n\n  const detectTouchStart = event => {\n    ignoreNonTouchEvents.current = true;\n    const childrenProps = children.props;\n\n    if (childrenProps.onTouchStart) {\n      childrenProps.onTouchStart(event);\n    }\n  };\n\n  const handleTouchStart = event => {\n    detectTouchStart(event);\n    clearTimeout(leaveTimer.current);\n    clearTimeout(closeTimer.current);\n    clearTimeout(touchTimer.current);\n    event.persist();\n    touchTimer.current = setTimeout(() => {\n      handleEnter()(event);\n    }, enterTouchDelay);\n  };\n\n  const handleTouchEnd = event => {\n    if (children.props.onTouchEnd) {\n      children.props.onTouchEnd(event);\n    }\n\n    clearTimeout(touchTimer.current);\n    clearTimeout(leaveTimer.current);\n    event.persist();\n    leaveTimer.current = setTimeout(() => {\n      handleClose(event);\n    }, leaveTouchDelay);\n  };\n\n  const handleUseRef = useForkRef(setChildNode, ref);\n  const handleFocusRef = useForkRef(focusVisibleRef, handleUseRef); // can be removed once we drop support for non ref forwarding class components\n\n  const handleOwnRef = React.useCallback(instance => {\n    // #StrictMode ready\n    setRef(handleFocusRef, ReactDOM.findDOMNode(instance));\n  }, [handleFocusRef]);\n  const handleRef = useForkRef(children.ref, handleOwnRef); // There is no point in displaying an empty tooltip.\n\n  if (title === '') {\n    open = false;\n  } // For accessibility and SEO concerns, we render the title to the DOM node when\n  // the tooltip is hidden. However, we have made a tradeoff when\n  // `disableHoverListener` is set. This title logic is disabled.\n  // It's allowing us to keep the implementation size minimal.\n  // We are open to change the tradeoff.\n\n\n  const shouldShowNativeTitle = !open && !disableHoverListener;\n\n  const childrenProps = _extends({\n    'aria-describedby': open ? id : null,\n    title: shouldShowNativeTitle && typeof title === 'string' ? title : null\n  }, other, children.props, {\n    className: clsx(other.className, children.props.className),\n    onTouchStart: detectTouchStart,\n    ref: handleRef\n  });\n\n  const interactiveWrapperListeners = {};\n\n  if (!disableTouchListener) {\n    childrenProps.onTouchStart = handleTouchStart;\n    childrenProps.onTouchEnd = handleTouchEnd;\n  }\n\n  if (!disableHoverListener) {\n    childrenProps.onMouseOver = handleEnter();\n    childrenProps.onMouseLeave = handleLeave();\n\n    if (interactive) {\n      interactiveWrapperListeners.onMouseOver = handleEnter(false);\n      interactiveWrapperListeners.onMouseLeave = handleLeave(false);\n    }\n  }\n\n  if (!disableFocusListener) {\n    childrenProps.onFocus = handleFocus();\n    childrenProps.onBlur = handleLeave();\n\n    if (interactive) {\n      interactiveWrapperListeners.onFocus = handleFocus(false);\n      interactiveWrapperListeners.onBlur = handleLeave(false);\n    }\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (children.props.title) {\n      console.error(['Material-UI: You have provided a `title` prop to the child of <Tooltip />.', `Remove this title prop \\`${children.props.title}\\` or the Tooltip component.`].join('\\n'));\n    }\n  }\n\n  const mergedPopperProps = React.useMemo(() => {\n    return deepmerge({\n      popperOptions: {\n        modifiers: {\n          arrow: {\n            enabled: Boolean(arrowRef),\n            element: arrowRef\n          }\n        }\n      }\n    }, PopperProps);\n  }, [arrowRef, PopperProps]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.cloneElement(children, childrenProps), /*#__PURE__*/React.createElement(PopperComponent, _extends({\n    className: clsx(classes.popper, interactive && classes.popperInteractive, arrow && classes.popperArrow),\n    placement: placement,\n    anchorEl: childNode,\n    open: childNode ? open : false,\n    id: childrenProps['aria-describedby'],\n    transition: true\n  }, interactiveWrapperListeners, mergedPopperProps), ({\n    placement: placementInner,\n    TransitionProps: TransitionPropsInner\n  }) => /*#__PURE__*/React.createElement(TransitionComponent, _extends({\n    timeout: theme.transitions.duration.shorter\n  }, TransitionPropsInner, TransitionProps), /*#__PURE__*/React.createElement(\"div\", {\n    className: clsx(classes.tooltip, classes[`tooltipPlacement${capitalize(placementInner.split('-')[0])}`], ignoreNonTouchEvents.current && classes.touch, arrow && classes.tooltipArrow)\n  }, title, arrow ? /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.arrow,\n    ref: setArrowRef\n  }) : null))));\n});\nprocess.env.NODE_ENV !== \"production\" ? Tooltip.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, adds an arrow to the tooltip.\n   */\n  arrow: PropTypes.bool,\n\n  /**\n   * Tooltip reference element.\n   */\n  children: elementAcceptingRef.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * Do not respond to focus events.\n   */\n  disableFocusListener: PropTypes.bool,\n\n  /**\n   * Do not respond to hover events.\n   */\n  disableHoverListener: PropTypes.bool,\n\n  /**\n   * Do not respond to long press touch events.\n   */\n  disableTouchListener: PropTypes.bool,\n\n  /**\n   * The number of milliseconds to wait before showing the tooltip.\n   * This prop won't impact the enter touch delay (`enterTouchDelay`).\n   */\n  enterDelay: PropTypes.number,\n\n  /**\n   * The number of milliseconds to wait before showing the tooltip when one was already recently opened.\n   */\n  enterNextDelay: PropTypes.number,\n\n  /**\n   * The number of milliseconds a user must touch the element before showing the tooltip.\n   */\n  enterTouchDelay: PropTypes.number,\n\n  /**\n   * This prop is used to help implement the accessibility logic.\n   * If you don't provide this prop. It falls back to a randomly generated id.\n   */\n  id: PropTypes.string,\n\n  /**\n   * Makes a tooltip interactive, i.e. will not close when the user\n   * hovers over the tooltip before the `leaveDelay` is expired.\n   */\n  interactive: PropTypes.bool,\n\n  /**\n   * The number of milliseconds to wait before hiding the tooltip.\n   * This prop won't impact the leave touch delay (`leaveTouchDelay`).\n   */\n  leaveDelay: PropTypes.number,\n\n  /**\n   * The number of milliseconds after the user stops touching an element before hiding the tooltip.\n   */\n  leaveTouchDelay: PropTypes.number,\n\n  /**\n   * Callback fired when the component requests to be closed.\n   *\n   * @param {object} event The event source of the callback.\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * Callback fired when the component requests to be open.\n   *\n   * @param {object} event The event source of the callback.\n   */\n  onOpen: PropTypes.func,\n\n  /**\n   * If `true`, the tooltip is shown.\n   */\n  open: PropTypes.bool,\n\n  /**\n   * Tooltip placement.\n   */\n  placement: PropTypes.oneOf(['bottom-end', 'bottom-start', 'bottom', 'left-end', 'left-start', 'left', 'right-end', 'right-start', 'right', 'top-end', 'top-start', 'top']),\n\n  /**\n   * The component used for the popper.\n   */\n  PopperComponent: PropTypes.elementType,\n\n  /**\n   * Props applied to the [`Popper`](/api/popper/) element.\n   */\n  PopperProps: PropTypes.object,\n\n  /**\n   * Tooltip title. Zero-length titles string are never displayed.\n   */\n  title: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .node.isRequired,\n\n  /**\n   * The component used for the transition.\n   * [Follow this guide](/components/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.\n   */\n  TransitionComponent: PropTypes.elementType,\n\n  /**\n   * Props applied to the [`Transition`](http://reactcommunity.org/react-transition-group/transition#Transition-props) element.\n   */\n  TransitionProps: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTooltip',\n  flip: false\n})(Tooltip);"]},"metadata":{},"sourceType":"module"}