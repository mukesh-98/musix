{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@material-ui/utils';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nconst SIZE = 44;\n\nfunction getRelativeValue(value, min, max) {\n  return (Math.min(Math.max(min, value), max) - min) / (max - min);\n}\n\nfunction easeOut(t) {\n  t = getRelativeValue(t, 0, 1); // https://gist.github.com/gre/1650294\n\n  t = (t -= 1) * t * t + 1;\n  return t;\n}\n\nfunction easeIn(t) {\n  return t * t;\n}\n\nexport const styles = theme => ({\n  /* Styles applied to the root element. */\n  root: {\n    display: 'inline-block'\n  },\n\n  /* Styles applied to the root element if `variant=\"static\"`. */\n  static: {\n    transition: theme.transitions.create('transform')\n  },\n\n  /* Styles applied to the root element if `variant=\"indeterminate\"`. */\n  indeterminate: {\n    animation: '$circular-rotate 1.4s linear infinite'\n  },\n\n  /* Styles applied to the root element if `color=\"primary\"`. */\n  colorPrimary: {\n    color: theme.palette.primary.main\n  },\n\n  /* Styles applied to the root element if `color=\"secondary\"`. */\n  colorSecondary: {\n    color: theme.palette.secondary.main\n  },\n\n  /* Styles applied to the `svg` element. */\n  svg: {\n    display: 'block' // Keeps the progress centered\n\n  },\n\n  /* Styles applied to the `circle` svg path. */\n  circle: {\n    stroke: 'currentColor' // Use butt to follow the specification, by chance, it's already the default CSS value.\n    // strokeLinecap: 'butt',\n\n  },\n\n  /* Styles applied to the `circle` svg path if `variant=\"static\"`. */\n  circleStatic: {\n    transition: theme.transitions.create('stroke-dashoffset')\n  },\n\n  /* Styles applied to the `circle` svg path if `variant=\"indeterminate\"`. */\n  circleIndeterminate: {\n    animation: '$circular-dash 1.4s ease-in-out infinite',\n    // Some default value that looks fine waiting for the animation to kicks in.\n    strokeDasharray: '80px, 200px',\n    strokeDashoffset: '0px' // Add the unit to fix a Edge 16 and below bug.\n\n  },\n  '@keyframes circular-rotate': {\n    '0%': {\n      // Fix IE 11 wobbly\n      transformOrigin: '50% 50%'\n    },\n    '100%': {\n      transform: 'rotate(360deg)'\n    }\n  },\n  '@keyframes circular-dash': {\n    '0%': {\n      strokeDasharray: '1px, 200px',\n      strokeDashoffset: '0px'\n    },\n    '50%': {\n      strokeDasharray: '100px, 200px',\n      strokeDashoffset: '-15px'\n    },\n    '100%': {\n      strokeDasharray: '100px, 200px',\n      strokeDashoffset: '-125px'\n    }\n  },\n\n  /* Styles applied to the `circle` svg path if `disableShrink={true}`. */\n  circleDisableShrink: {\n    animation: 'none'\n  }\n});\n/**\n * ## ARIA\n *\n * If the progress bar is describing the loading progress of a particular region of a page,\n * you should use `aria-describedby` to point to the progress bar, and set the `aria-busy`\n * attribute to `true` on that region until it has finished loading.\n */\n\nconst CircularProgress = /*#__PURE__*/React.forwardRef(function CircularProgress(props, ref) {\n  const {\n    classes,\n    className,\n    color = 'primary',\n    disableShrink = false,\n    size = 40,\n    style,\n    thickness = 3.6,\n    value = 0,\n    variant = 'indeterminate'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"classes\", \"className\", \"color\", \"disableShrink\", \"size\", \"style\", \"thickness\", \"value\", \"variant\"]);\n\n  const circleStyle = {};\n  const rootStyle = {};\n  const rootProps = {};\n\n  if (variant === 'determinate' || variant === 'static') {\n    const circumference = 2 * Math.PI * ((SIZE - thickness) / 2);\n    circleStyle.strokeDasharray = circumference.toFixed(3);\n    rootProps['aria-valuenow'] = Math.round(value);\n\n    if (variant === 'static') {\n      circleStyle.strokeDashoffset = `${((100 - value) / 100 * circumference).toFixed(3)}px`;\n      rootStyle.transform = 'rotate(-90deg)';\n    } else {\n      circleStyle.strokeDashoffset = `${(easeIn((100 - value) / 100) * circumference).toFixed(3)}px`;\n      rootStyle.transform = `rotate(${(easeOut(value / 70) * 270).toFixed(3)}deg)`;\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, color !== 'inherit' && classes[`color${capitalize(color)}`], {\n      'indeterminate': classes.indeterminate,\n      'static': classes.static\n    }[variant]),\n    style: _extends({\n      width: size,\n      height: size\n    }, rootStyle, style),\n    ref: ref,\n    role: \"progressbar\"\n  }, rootProps, other), /*#__PURE__*/React.createElement(\"svg\", {\n    className: classes.svg,\n    viewBox: `${SIZE / 2} ${SIZE / 2} ${SIZE} ${SIZE}`\n  }, /*#__PURE__*/React.createElement(\"circle\", {\n    className: clsx(classes.circle, disableShrink && classes.circleDisableShrink, {\n      'indeterminate': classes.circleIndeterminate,\n      'static': classes.circleStatic\n    }[variant]),\n    style: circleStyle,\n    cx: SIZE,\n    cy: SIZE,\n    r: (SIZE - thickness) / 2,\n    fill: \"none\",\n    strokeWidth: thickness\n  })));\n});\nprocess.env.NODE_ENV !== \"production\" ? CircularProgress.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['inherit', 'primary', 'secondary']),\n\n  /**\n   * If `true`, the shrink animation is disabled.\n   * This only works if variant is `indeterminate`.\n   */\n  disableShrink: chainPropTypes(PropTypes.bool, props => {\n    if (props.disableShrink && props.variant && props.variant !== 'indeterminate') {\n      return new Error('Material-UI: You have provided the `disableShrink` prop ' + 'with a variant other than `indeterminate`. This will have no effect.');\n    }\n\n    return null;\n  }),\n\n  /**\n   * The size of the circle.\n   * If using a number, the pixel unit is assumed.\n   * If using a string, you need to provide the CSS unit, e.g '3rem'.\n   */\n  size: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n\n  /**\n   * The thickness of the circle.\n   */\n  thickness: PropTypes.number,\n\n  /**\n   * The value of the progress indicator for the determinate and static variants.\n   * Value between 0 and 100.\n   */\n  value: PropTypes.number,\n\n  /**\n   * The variant to use.\n   * Use indeterminate when there is no progress value.\n   */\n  variant: PropTypes.oneOf(['determinate', 'indeterminate', 'static'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCircularProgress',\n  flip: false\n})(CircularProgress);","map":{"version":3,"sources":["/home/ovesh/Desktop/MukeshParmar_Project/React/musix/node_modules/@material-ui/core/es/CircularProgress/CircularProgress.js"],"names":["_extends","_objectWithoutPropertiesLoose","React","PropTypes","clsx","chainPropTypes","withStyles","capitalize","SIZE","getRelativeValue","value","min","max","Math","easeOut","t","easeIn","styles","theme","root","display","static","transition","transitions","create","indeterminate","animation","colorPrimary","color","palette","primary","main","colorSecondary","secondary","svg","circle","stroke","circleStatic","circleIndeterminate","strokeDasharray","strokeDashoffset","transformOrigin","transform","circleDisableShrink","CircularProgress","forwardRef","props","ref","classes","className","disableShrink","size","style","thickness","variant","other","circleStyle","rootStyle","rootProps","circumference","PI","toFixed","round","createElement","width","height","role","viewBox","cx","cy","r","fill","strokeWidth","process","env","NODE_ENV","propTypes","object","string","oneOf","bool","Error","oneOfType","number","name","flip"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@material-ui/utils';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nconst SIZE = 44;\n\nfunction getRelativeValue(value, min, max) {\n  return (Math.min(Math.max(min, value), max) - min) / (max - min);\n}\n\nfunction easeOut(t) {\n  t = getRelativeValue(t, 0, 1); // https://gist.github.com/gre/1650294\n\n  t = (t -= 1) * t * t + 1;\n  return t;\n}\n\nfunction easeIn(t) {\n  return t * t;\n}\n\nexport const styles = theme => ({\n  /* Styles applied to the root element. */\n  root: {\n    display: 'inline-block'\n  },\n\n  /* Styles applied to the root element if `variant=\"static\"`. */\n  static: {\n    transition: theme.transitions.create('transform')\n  },\n\n  /* Styles applied to the root element if `variant=\"indeterminate\"`. */\n  indeterminate: {\n    animation: '$circular-rotate 1.4s linear infinite'\n  },\n\n  /* Styles applied to the root element if `color=\"primary\"`. */\n  colorPrimary: {\n    color: theme.palette.primary.main\n  },\n\n  /* Styles applied to the root element if `color=\"secondary\"`. */\n  colorSecondary: {\n    color: theme.palette.secondary.main\n  },\n\n  /* Styles applied to the `svg` element. */\n  svg: {\n    display: 'block' // Keeps the progress centered\n\n  },\n\n  /* Styles applied to the `circle` svg path. */\n  circle: {\n    stroke: 'currentColor' // Use butt to follow the specification, by chance, it's already the default CSS value.\n    // strokeLinecap: 'butt',\n\n  },\n\n  /* Styles applied to the `circle` svg path if `variant=\"static\"`. */\n  circleStatic: {\n    transition: theme.transitions.create('stroke-dashoffset')\n  },\n\n  /* Styles applied to the `circle` svg path if `variant=\"indeterminate\"`. */\n  circleIndeterminate: {\n    animation: '$circular-dash 1.4s ease-in-out infinite',\n    // Some default value that looks fine waiting for the animation to kicks in.\n    strokeDasharray: '80px, 200px',\n    strokeDashoffset: '0px' // Add the unit to fix a Edge 16 and below bug.\n\n  },\n  '@keyframes circular-rotate': {\n    '0%': {\n      // Fix IE 11 wobbly\n      transformOrigin: '50% 50%'\n    },\n    '100%': {\n      transform: 'rotate(360deg)'\n    }\n  },\n  '@keyframes circular-dash': {\n    '0%': {\n      strokeDasharray: '1px, 200px',\n      strokeDashoffset: '0px'\n    },\n    '50%': {\n      strokeDasharray: '100px, 200px',\n      strokeDashoffset: '-15px'\n    },\n    '100%': {\n      strokeDasharray: '100px, 200px',\n      strokeDashoffset: '-125px'\n    }\n  },\n\n  /* Styles applied to the `circle` svg path if `disableShrink={true}`. */\n  circleDisableShrink: {\n    animation: 'none'\n  }\n});\n/**\n * ## ARIA\n *\n * If the progress bar is describing the loading progress of a particular region of a page,\n * you should use `aria-describedby` to point to the progress bar, and set the `aria-busy`\n * attribute to `true` on that region until it has finished loading.\n */\n\nconst CircularProgress = /*#__PURE__*/React.forwardRef(function CircularProgress(props, ref) {\n  const {\n    classes,\n    className,\n    color = 'primary',\n    disableShrink = false,\n    size = 40,\n    style,\n    thickness = 3.6,\n    value = 0,\n    variant = 'indeterminate'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"classes\", \"className\", \"color\", \"disableShrink\", \"size\", \"style\", \"thickness\", \"value\", \"variant\"]);\n\n  const circleStyle = {};\n  const rootStyle = {};\n  const rootProps = {};\n\n  if (variant === 'determinate' || variant === 'static') {\n    const circumference = 2 * Math.PI * ((SIZE - thickness) / 2);\n    circleStyle.strokeDasharray = circumference.toFixed(3);\n    rootProps['aria-valuenow'] = Math.round(value);\n\n    if (variant === 'static') {\n      circleStyle.strokeDashoffset = `${((100 - value) / 100 * circumference).toFixed(3)}px`;\n      rootStyle.transform = 'rotate(-90deg)';\n    } else {\n      circleStyle.strokeDashoffset = `${(easeIn((100 - value) / 100) * circumference).toFixed(3)}px`;\n      rootStyle.transform = `rotate(${(easeOut(value / 70) * 270).toFixed(3)}deg)`;\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, color !== 'inherit' && classes[`color${capitalize(color)}`], {\n      'indeterminate': classes.indeterminate,\n      'static': classes.static\n    }[variant]),\n    style: _extends({\n      width: size,\n      height: size\n    }, rootStyle, style),\n    ref: ref,\n    role: \"progressbar\"\n  }, rootProps, other), /*#__PURE__*/React.createElement(\"svg\", {\n    className: classes.svg,\n    viewBox: `${SIZE / 2} ${SIZE / 2} ${SIZE} ${SIZE}`\n  }, /*#__PURE__*/React.createElement(\"circle\", {\n    className: clsx(classes.circle, disableShrink && classes.circleDisableShrink, {\n      'indeterminate': classes.circleIndeterminate,\n      'static': classes.circleStatic\n    }[variant]),\n    style: circleStyle,\n    cx: SIZE,\n    cy: SIZE,\n    r: (SIZE - thickness) / 2,\n    fill: \"none\",\n    strokeWidth: thickness\n  })));\n});\nprocess.env.NODE_ENV !== \"production\" ? CircularProgress.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['inherit', 'primary', 'secondary']),\n\n  /**\n   * If `true`, the shrink animation is disabled.\n   * This only works if variant is `indeterminate`.\n   */\n  disableShrink: chainPropTypes(PropTypes.bool, props => {\n    if (props.disableShrink && props.variant && props.variant !== 'indeterminate') {\n      return new Error('Material-UI: You have provided the `disableShrink` prop ' + 'with a variant other than `indeterminate`. This will have no effect.');\n    }\n\n    return null;\n  }),\n\n  /**\n   * The size of the circle.\n   * If using a number, the pixel unit is assumed.\n   * If using a string, you need to provide the CSS unit, e.g '3rem'.\n   */\n  size: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n\n  /**\n   * The thickness of the circle.\n   */\n  thickness: PropTypes.number,\n\n  /**\n   * The value of the progress indicator for the determinate and static variants.\n   * Value between 0 and 100.\n   */\n  value: PropTypes.number,\n\n  /**\n   * The variant to use.\n   * Use indeterminate when there is no progress value.\n   */\n  variant: PropTypes.oneOf(['determinate', 'indeterminate', 'static'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCircularProgress',\n  flip: false\n})(CircularProgress);"]},"metadata":{},"sourceType":"module"}