{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport const styles = {\n  /* Styles applied to the root element. */\n  root: {\n    width: '100%',\n    overflowX: 'auto'\n  }\n};\nconst TableContainer = /*#__PURE__*/React.forwardRef(function TableContainer(props, ref) {\n  const {\n    classes,\n    className,\n    component: Component = 'div'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"classes\", \"className\", \"component\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref,\n    className: clsx(classes.root, className)\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? TableContainer.propTypes = {\n  /**\n   * The table itself, normally `<Table />`\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTableContainer'\n})(TableContainer);","map":{"version":3,"sources":["/home/ovesh/Desktop/MukeshParmar_Project/React/musix/node_modules/@material-ui/core/es/TableContainer/TableContainer.js"],"names":["_extends","_objectWithoutPropertiesLoose","React","PropTypes","clsx","withStyles","styles","root","width","overflowX","TableContainer","forwardRef","props","ref","classes","className","component","Component","other","createElement","process","env","NODE_ENV","propTypes","children","node","object","isRequired","string","elementType","name"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,oCAArB;AACA,OAAOC,6BAAP,MAA0C,yDAA1C;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,UAAP,MAAuB,sBAAvB;AACA,OAAO,MAAMC,MAAM,GAAG;AACpB;AACAC,EAAAA,IAAI,EAAE;AACJC,IAAAA,KAAK,EAAE,MADH;AAEJC,IAAAA,SAAS,EAAE;AAFP;AAFc,CAAf;AAOP,MAAMC,cAAc,GAAG,aAAaR,KAAK,CAACS,UAAN,CAAiB,SAASD,cAAT,CAAwBE,KAAxB,EAA+BC,GAA/B,EAAoC;AACvF,QAAM;AACJC,IAAAA,OADI;AAEJC,IAAAA,SAFI;AAGJC,IAAAA,SAAS,EAAEC,SAAS,GAAG;AAHnB,MAIFL,KAJJ;AAAA,QAKMM,KAAK,GAAGjB,6BAA6B,CAACW,KAAD,EAAQ,CAAC,SAAD,EAAY,WAAZ,EAAyB,WAAzB,CAAR,CAL3C;;AAOA,SAAO,aAAaV,KAAK,CAACiB,aAAN,CAAoBF,SAApB,EAA+BjB,QAAQ,CAAC;AAC1Da,IAAAA,GAAG,EAAEA,GADqD;AAE1DE,IAAAA,SAAS,EAAEX,IAAI,CAACU,OAAO,CAACP,IAAT,EAAeQ,SAAf;AAF2C,GAAD,EAGxDG,KAHwD,CAAvC,CAApB;AAID,CAZmC,CAApC;AAaAE,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwCZ,cAAc,CAACa,SAAf,GAA2B;AACjE;;;AAGAC,EAAAA,QAAQ,EAAErB,SAAS,CAACsB,IAJ6C;;AAMjE;;;;AAIAX,EAAAA,OAAO,EAAEX,SAAS,CAACuB,MAAV,CAAiBC,UAVuC;;AAYjE;;;AAGAZ,EAAAA,SAAS,EAAEZ,SAAS,CAACyB,MAf4C;;AAiBjE;;;;AAIAZ,EAAAA,SAAS,EAAEb;AACX;AADoB,GAEnB0B;AAvBgE,CAAnE,GAwBI,KAAK,CAxBT;AAyBA,eAAexB,UAAU,CAACC,MAAD,EAAS;AAChCwB,EAAAA,IAAI,EAAE;AAD0B,CAAT,CAAV,CAEZpB,cAFY,CAAf","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport const styles = {\n  /* Styles applied to the root element. */\n  root: {\n    width: '100%',\n    overflowX: 'auto'\n  }\n};\nconst TableContainer = /*#__PURE__*/React.forwardRef(function TableContainer(props, ref) {\n  const {\n    classes,\n    className,\n    component: Component = 'div'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"classes\", \"className\", \"component\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref,\n    className: clsx(classes.root, className)\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? TableContainer.propTypes = {\n  /**\n   * The table itself, normally `<Table />`\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTableContainer'\n})(TableContainer);"]},"metadata":{},"sourceType":"module"}