{"ast":null,"code":"import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport ButtonBase from '../ButtonBase';\nimport capitalize from '../utils/capitalize';\nexport const styles = theme => ({\n  /* Styles applied to the root element. */\n  root: _extends({}, theme.typography.button, {\n    boxSizing: 'border-box',\n    minHeight: 36,\n    transition: theme.transitions.create(['background-color', 'box-shadow', 'border'], {\n      duration: theme.transitions.duration.short\n    }),\n    borderRadius: '50%',\n    padding: 0,\n    minWidth: 0,\n    width: 56,\n    height: 56,\n    boxShadow: theme.shadows[6],\n    '&:active': {\n      boxShadow: theme.shadows[12]\n    },\n    color: theme.palette.getContrastText(theme.palette.grey[300]),\n    backgroundColor: theme.palette.grey[300],\n    '&:hover': {\n      backgroundColor: theme.palette.grey.A100,\n      // Reset on touch devices, it doesn't add specificity\n      '@media (hover: none)': {\n        backgroundColor: theme.palette.grey[300]\n      },\n      '&$disabled': {\n        backgroundColor: theme.palette.action.disabledBackground\n      },\n      textDecoration: 'none'\n    },\n    '&$focusVisible': {\n      boxShadow: theme.shadows[6]\n    },\n    '&$disabled': {\n      color: theme.palette.action.disabled,\n      boxShadow: theme.shadows[0],\n      backgroundColor: theme.palette.action.disabledBackground\n    }\n  }),\n\n  /* Styles applied to the span element that wraps the children. */\n  label: {\n    width: '100%',\n    // assure the correct width for iOS Safari\n    display: 'inherit',\n    alignItems: 'inherit',\n    justifyContent: 'inherit'\n  },\n\n  /* Styles applied to the root element if `color=\"primary\"`. */\n  primary: {\n    color: theme.palette.primary.contrastText,\n    backgroundColor: theme.palette.primary.main,\n    '&:hover': {\n      backgroundColor: theme.palette.primary.dark,\n      // Reset on touch devices, it doesn't add specificity\n      '@media (hover: none)': {\n        backgroundColor: theme.palette.primary.main\n      }\n    }\n  },\n\n  /* Styles applied to the root element if `color=\"secondary\"`. */\n  secondary: {\n    color: theme.palette.secondary.contrastText,\n    backgroundColor: theme.palette.secondary.main,\n    '&:hover': {\n      backgroundColor: theme.palette.secondary.dark,\n      // Reset on touch devices, it doesn't add specificity\n      '@media (hover: none)': {\n        backgroundColor: theme.palette.secondary.main\n      }\n    }\n  },\n\n  /* Styles applied to the root element if `variant=\"extended\"`. */\n  extended: {\n    borderRadius: 48 / 2,\n    padding: '0 16px',\n    width: 'auto',\n    minHeight: 'auto',\n    minWidth: 48,\n    height: 48,\n    '&$sizeSmall': {\n      width: 'auto',\n      padding: '0 8px',\n      borderRadius: 34 / 2,\n      minWidth: 34,\n      height: 34\n    },\n    '&$sizeMedium': {\n      width: 'auto',\n      padding: '0 16px',\n      borderRadius: 40 / 2,\n      minWidth: 40,\n      height: 40\n    }\n  },\n\n  /* Pseudo-class applied to the ButtonBase root element if the button is keyboard focused. */\n  focusVisible: {},\n\n  /* Pseudo-class applied to the root element if `disabled={true}`. */\n  disabled: {},\n\n  /* Styles applied to the root element if `color=\"inherit\"`. */\n  colorInherit: {\n    color: 'inherit'\n  },\n\n  /* Styles applied to the root element if `size=\"small\"``. */\n  sizeSmall: {\n    width: 40,\n    height: 40\n  },\n\n  /* Styles applied to the root element if `size=\"medium\"``. */\n  sizeMedium: {\n    width: 48,\n    height: 48\n  }\n});\nconst Fab = /*#__PURE__*/React.forwardRef(function Fab(props, ref) {\n  const {\n    children,\n    classes,\n    className,\n    color = 'default',\n    component = 'button',\n    disabled = false,\n    disableFocusRipple = false,\n    focusVisibleClassName,\n    size = 'large',\n    variant = 'round'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"children\", \"classes\", \"className\", \"color\", \"component\", \"disabled\", \"disableFocusRipple\", \"focusVisibleClassName\", \"size\", \"variant\"]);\n\n  return /*#__PURE__*/React.createElement(ButtonBase, _extends({\n    className: clsx(classes.root, className, variant !== \"round\" && classes.extended, size !== 'large' && classes[`size${capitalize(size)}`], disabled && classes.disabled, {\n      'primary': classes.primary,\n      'secondary': classes.secondary,\n      'inherit': classes.colorInherit\n    }[color]),\n    component: component,\n    disabled: disabled,\n    focusRipple: !disableFocusRipple,\n    focusVisibleClassName: clsx(classes.focusVisible, focusVisibleClassName),\n    ref: ref\n  }, other), /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.label\n  }, children));\n});\nprocess.env.NODE_ENV !== \"production\" ? Fab.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the button.\n   */\n  children: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['default', 'inherit', 'primary', 'secondary']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, the button will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the  keyboard focus ripple will be disabled.\n   */\n  disableFocusRipple: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  focusVisibleClassName: PropTypes.string,\n\n  /**\n   * The URL to link to when the button is clicked.\n   * If defined, an `a` element will be used as the root node.\n   */\n  href: PropTypes.string,\n\n  /**\n   * The size of the button.\n   * `small` is equivalent to the dense button styling.\n   */\n  size: PropTypes.oneOf(['large', 'medium', 'small']),\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['extended', 'round'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiFab'\n})(Fab);","map":{"version":3,"sources":["/home/ovesh/Desktop/MukeshParmar_Project/React/musix/node_modules/@material-ui/core/es/Fab/Fab.js"],"names":["_objectWithoutPropertiesLoose","_extends","React","PropTypes","clsx","withStyles","ButtonBase","capitalize","styles","theme","root","typography","button","boxSizing","minHeight","transition","transitions","create","duration","short","borderRadius","padding","minWidth","width","height","boxShadow","shadows","color","palette","getContrastText","grey","backgroundColor","A100","action","disabledBackground","textDecoration","disabled","label","display","alignItems","justifyContent","primary","contrastText","main","dark","secondary","extended","focusVisible","colorInherit","sizeSmall","sizeMedium","Fab","forwardRef","props","ref","children","classes","className","component","disableFocusRipple","focusVisibleClassName","size","variant","other","createElement","focusRipple","process","env","NODE_ENV","propTypes","node","isRequired","object","string","oneOf","elementType","bool","disableRipple","href","name"],"mappings":"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","sourcesContent":["import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport ButtonBase from '../ButtonBase';\nimport capitalize from '../utils/capitalize';\nexport const styles = theme => ({\n  /* Styles applied to the root element. */\n  root: _extends({}, theme.typography.button, {\n    boxSizing: 'border-box',\n    minHeight: 36,\n    transition: theme.transitions.create(['background-color', 'box-shadow', 'border'], {\n      duration: theme.transitions.duration.short\n    }),\n    borderRadius: '50%',\n    padding: 0,\n    minWidth: 0,\n    width: 56,\n    height: 56,\n    boxShadow: theme.shadows[6],\n    '&:active': {\n      boxShadow: theme.shadows[12]\n    },\n    color: theme.palette.getContrastText(theme.palette.grey[300]),\n    backgroundColor: theme.palette.grey[300],\n    '&:hover': {\n      backgroundColor: theme.palette.grey.A100,\n      // Reset on touch devices, it doesn't add specificity\n      '@media (hover: none)': {\n        backgroundColor: theme.palette.grey[300]\n      },\n      '&$disabled': {\n        backgroundColor: theme.palette.action.disabledBackground\n      },\n      textDecoration: 'none'\n    },\n    '&$focusVisible': {\n      boxShadow: theme.shadows[6]\n    },\n    '&$disabled': {\n      color: theme.palette.action.disabled,\n      boxShadow: theme.shadows[0],\n      backgroundColor: theme.palette.action.disabledBackground\n    }\n  }),\n\n  /* Styles applied to the span element that wraps the children. */\n  label: {\n    width: '100%',\n    // assure the correct width for iOS Safari\n    display: 'inherit',\n    alignItems: 'inherit',\n    justifyContent: 'inherit'\n  },\n\n  /* Styles applied to the root element if `color=\"primary\"`. */\n  primary: {\n    color: theme.palette.primary.contrastText,\n    backgroundColor: theme.palette.primary.main,\n    '&:hover': {\n      backgroundColor: theme.palette.primary.dark,\n      // Reset on touch devices, it doesn't add specificity\n      '@media (hover: none)': {\n        backgroundColor: theme.palette.primary.main\n      }\n    }\n  },\n\n  /* Styles applied to the root element if `color=\"secondary\"`. */\n  secondary: {\n    color: theme.palette.secondary.contrastText,\n    backgroundColor: theme.palette.secondary.main,\n    '&:hover': {\n      backgroundColor: theme.palette.secondary.dark,\n      // Reset on touch devices, it doesn't add specificity\n      '@media (hover: none)': {\n        backgroundColor: theme.palette.secondary.main\n      }\n    }\n  },\n\n  /* Styles applied to the root element if `variant=\"extended\"`. */\n  extended: {\n    borderRadius: 48 / 2,\n    padding: '0 16px',\n    width: 'auto',\n    minHeight: 'auto',\n    minWidth: 48,\n    height: 48,\n    '&$sizeSmall': {\n      width: 'auto',\n      padding: '0 8px',\n      borderRadius: 34 / 2,\n      minWidth: 34,\n      height: 34\n    },\n    '&$sizeMedium': {\n      width: 'auto',\n      padding: '0 16px',\n      borderRadius: 40 / 2,\n      minWidth: 40,\n      height: 40\n    }\n  },\n\n  /* Pseudo-class applied to the ButtonBase root element if the button is keyboard focused. */\n  focusVisible: {},\n\n  /* Pseudo-class applied to the root element if `disabled={true}`. */\n  disabled: {},\n\n  /* Styles applied to the root element if `color=\"inherit\"`. */\n  colorInherit: {\n    color: 'inherit'\n  },\n\n  /* Styles applied to the root element if `size=\"small\"``. */\n  sizeSmall: {\n    width: 40,\n    height: 40\n  },\n\n  /* Styles applied to the root element if `size=\"medium\"``. */\n  sizeMedium: {\n    width: 48,\n    height: 48\n  }\n});\nconst Fab = /*#__PURE__*/React.forwardRef(function Fab(props, ref) {\n  const {\n    children,\n    classes,\n    className,\n    color = 'default',\n    component = 'button',\n    disabled = false,\n    disableFocusRipple = false,\n    focusVisibleClassName,\n    size = 'large',\n    variant = 'round'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"children\", \"classes\", \"className\", \"color\", \"component\", \"disabled\", \"disableFocusRipple\", \"focusVisibleClassName\", \"size\", \"variant\"]);\n\n  return /*#__PURE__*/React.createElement(ButtonBase, _extends({\n    className: clsx(classes.root, className, variant !== \"round\" && classes.extended, size !== 'large' && classes[`size${capitalize(size)}`], disabled && classes.disabled, {\n      'primary': classes.primary,\n      'secondary': classes.secondary,\n      'inherit': classes.colorInherit\n    }[color]),\n    component: component,\n    disabled: disabled,\n    focusRipple: !disableFocusRipple,\n    focusVisibleClassName: clsx(classes.focusVisible, focusVisibleClassName),\n    ref: ref\n  }, other), /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.label\n  }, children));\n});\nprocess.env.NODE_ENV !== \"production\" ? Fab.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the button.\n   */\n  children: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['default', 'inherit', 'primary', 'secondary']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, the button will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the  keyboard focus ripple will be disabled.\n   */\n  disableFocusRipple: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  focusVisibleClassName: PropTypes.string,\n\n  /**\n   * The URL to link to when the button is clicked.\n   * If defined, an `a` element will be used as the root node.\n   */\n  href: PropTypes.string,\n\n  /**\n   * The size of the button.\n   * `small` is equivalent to the dense button styling.\n   */\n  size: PropTypes.oneOf(['large', 'medium', 'small']),\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['extended', 'round'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiFab'\n})(Fab);"]},"metadata":{},"sourceType":"module"}