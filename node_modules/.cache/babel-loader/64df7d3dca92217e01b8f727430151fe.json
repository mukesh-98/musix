{"ast":null,"code":"import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@material-ui/utils';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  var elevations = {};\n  theme.shadows.forEach(function (shadow, index) {\n    elevations[\"elevation\".concat(index)] = {\n      boxShadow: shadow\n    };\n  });\n  return _extends({\n    /* Styles applied to the root element. */\n    root: {\n      backgroundColor: theme.palette.background.paper,\n      color: theme.palette.text.primary,\n      transition: theme.transitions.create('box-shadow')\n    },\n\n    /* Styles applied to the root element if `square={false}`. */\n    rounded: {\n      borderRadius: theme.shape.borderRadius\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"`. */\n    outlined: {\n      border: \"1px solid \".concat(theme.palette.divider)\n    }\n  }, elevations);\n};\nvar Paper = /*#__PURE__*/React.forwardRef(function Paper(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$square = props.square,\n      square = _props$square === void 0 ? false : _props$square,\n      _props$elevation = props.elevation,\n      elevation = _props$elevation === void 0 ? 1 : _props$elevation,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'elevation' : _props$variant,\n      other = _objectWithoutPropertiesLoose(props, [\"classes\", \"className\", \"component\", \"square\", \"elevation\", \"variant\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, variant === 'outlined' ? classes.outlined : classes[\"elevation\".concat(elevation)], !square && classes.rounded),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Paper.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * Shadow depth, corresponds to `dp` in the spec.\n   * It accepts values between 0 and 24 inclusive.\n   */\n  elevation: chainPropTypes(PropTypes.number, function (props) {\n    var classes = props.classes,\n        elevation = props.elevation; // in case `withStyles` fails to inject we don't need this warning\n\n    if (classes === undefined) {\n      return null;\n    }\n\n    if (elevation != null && classes[\"elevation\".concat(elevation)] === undefined) {\n      return new Error(\"Material-UI: This elevation `\".concat(elevation, \"` is not implemented.\"));\n    }\n\n    return null;\n  }),\n\n  /**\n   * If `true`, rounded corners are disabled.\n   */\n  square: PropTypes.bool,\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['elevation', 'outlined'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiPaper'\n})(Paper);","map":{"version":3,"sources":["/home/ovesh/Desktop/MukeshParmar_Project/React/musix/node_modules/@material-ui/core/es/Paper/Paper.js"],"names":["_objectWithoutPropertiesLoose","_extends","React","PropTypes","clsx","chainPropTypes","withStyles","styles","theme","elevations","shadows","forEach","shadow","index","boxShadow","root","backgroundColor","palette","background","paper","color","text","primary","transition","transitions","create","rounded","borderRadius","shape","outlined","border","divider","Paper","forwardRef","props","ref","classes","className","component","Component","square","elevation","variant","other","createElement","process","env","NODE_ENV","propTypes","children","node","object","string","elementType","number","undefined","Error","bool","oneOf","name"],"mappings":"AAAA,OAAOA,6BAAP,MAA0C,yDAA1C;AACA,OAAOC,QAAP,MAAqB,oCAArB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,SAASC,cAAT,QAA+B,oBAA/B;AACA,OAAOC,UAAP,MAAuB,sBAAvB;AACA,OAAO,IAAMC,MAAM,GAAG,SAATA,MAAS,CAAAC,KAAK,EAAI;AAC7B,MAAMC,UAAU,GAAG,EAAnB;AACAD,EAAAA,KAAK,CAACE,OAAN,CAAcC,OAAd,CAAsB,UAACC,MAAD,EAASC,KAAT,EAAmB;AACvCJ,IAAAA,UAAU,oBAAaI,KAAb,EAAV,GAAkC;AAChCC,MAAAA,SAAS,EAAEF;AADqB,KAAlC;AAGD,GAJD;AAKA,SAAOX,QAAQ,CAAC;AACd;AACAc,IAAAA,IAAI,EAAE;AACJC,MAAAA,eAAe,EAAER,KAAK,CAACS,OAAN,CAAcC,UAAd,CAAyBC,KADtC;AAEJC,MAAAA,KAAK,EAAEZ,KAAK,CAACS,OAAN,CAAcI,IAAd,CAAmBC,OAFtB;AAGJC,MAAAA,UAAU,EAAEf,KAAK,CAACgB,WAAN,CAAkBC,MAAlB,CAAyB,YAAzB;AAHR,KAFQ;;AAQd;AACAC,IAAAA,OAAO,EAAE;AACPC,MAAAA,YAAY,EAAEnB,KAAK,CAACoB,KAAN,CAAYD;AADnB,KATK;;AAad;AACAE,IAAAA,QAAQ,EAAE;AACRC,MAAAA,MAAM,sBAAetB,KAAK,CAACS,OAAN,CAAcc,OAA7B;AADE;AAdI,GAAD,EAiBZtB,UAjBY,CAAf;AAkBD,CAzBM;AA0BP,IAAMuB,KAAK,GAAG,aAAa9B,KAAK,CAAC+B,UAAN,CAAiB,SAASD,KAAT,CAAeE,KAAf,EAAsBC,GAAtB,EAA2B;AAAA,MAEnEC,OAFmE,GAQjEF,KARiE,CAEnEE,OAFmE;AAAA,MAGnEC,SAHmE,GAQjEH,KARiE,CAGnEG,SAHmE;AAAA,yBAQjEH,KARiE,CAInEI,SAJmE;AAAA,MAIxDC,SAJwD,iCAI5C,KAJ4C;AAAA,sBAQjEL,KARiE,CAKnEM,MALmE;AAAA,MAKnEA,MALmE,8BAK1D,KAL0D;AAAA,yBAQjEN,KARiE,CAMnEO,SANmE;AAAA,MAMnEA,SANmE,iCAMvD,CANuD;AAAA,uBAQjEP,KARiE,CAOnEQ,OAPmE;AAAA,MAOnEA,OAPmE,+BAOzD,WAPyD;AAAA,MAS/DC,KAT+D,GASvD3C,6BAA6B,CAACkC,KAAD,EAAQ,CAAC,SAAD,EAAY,WAAZ,EAAyB,WAAzB,EAAsC,QAAtC,EAAgD,WAAhD,EAA6D,SAA7D,CAAR,CAT0B;;AAWrE,SAAO,aAAahC,KAAK,CAAC0C,aAAN,CAAoBL,SAApB,EAA+BtC,QAAQ,CAAC;AAC1DoC,IAAAA,SAAS,EAAEjC,IAAI,CAACgC,OAAO,CAACrB,IAAT,EAAesB,SAAf,EAA0BK,OAAO,KAAK,UAAZ,GAAyBN,OAAO,CAACP,QAAjC,GAA4CO,OAAO,oBAAaK,SAAb,EAA7E,EAAwG,CAACD,MAAD,IAAWJ,OAAO,CAACV,OAA3H,CAD2C;AAE1DS,IAAAA,GAAG,EAAEA;AAFqD,GAAD,EAGxDQ,KAHwD,CAAvC,CAApB;AAID,CAf0B,CAA3B;AAgBAE,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwCf,KAAK,CAACgB,SAAN,GAAkB;AACxD;AACA;AACA;AACA;;AAEA;;;AAGAC,EAAAA,QAAQ,EAAE9C,SAAS,CAAC+C,IAToC;;AAWxD;;;;AAIAd,EAAAA,OAAO,EAAEjC,SAAS,CAACgD,MAfqC;;AAiBxD;;;AAGAd,EAAAA,SAAS,EAAElC,SAAS,CAACiD,MApBmC;;AAsBxD;;;;AAIAd,EAAAA,SAAS,EAAEnC;AACX;AADoB,GAEnBkD,WA5BuD;;AA8BxD;;;;AAIAZ,EAAAA,SAAS,EAAEpC,cAAc,CAACF,SAAS,CAACmD,MAAX,EAAmB,UAAApB,KAAK,EAAI;AAAA,QAEjDE,OAFiD,GAI/CF,KAJ+C,CAEjDE,OAFiD;AAAA,QAGjDK,SAHiD,GAI/CP,KAJ+C,CAGjDO,SAHiD,EAIxC;;AAEX,QAAIL,OAAO,KAAKmB,SAAhB,EAA2B;AACzB,aAAO,IAAP;AACD;;AAED,QAAId,SAAS,IAAI,IAAb,IAAqBL,OAAO,oBAAaK,SAAb,EAAP,KAAqCc,SAA9D,EAAyE;AACvE,aAAO,IAAIC,KAAJ,wCAA2Cf,SAA3C,2BAAP;AACD;;AAED,WAAO,IAAP;AACD,GAfwB,CAlC+B;;AAmDxD;;;AAGAD,EAAAA,MAAM,EAAErC,SAAS,CAACsD,IAtDsC;;AAwDxD;;;AAGAf,EAAAA,OAAO,EAAEvC,SAAS,CAACuD,KAAV,CAAgB,CAAC,WAAD,EAAc,UAAd,CAAhB;AA3D+C,CAA1D,GA4DI,KAAK,CA5DT;AA6DA,eAAepD,UAAU,CAACC,MAAD,EAAS;AAChCoD,EAAAA,IAAI,EAAE;AAD0B,CAAT,CAAV,CAEZ3B,KAFY,CAAf","sourcesContent":["import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@material-ui/utils';\nimport withStyles from '../styles/withStyles';\nexport const styles = theme => {\n  const elevations = {};\n  theme.shadows.forEach((shadow, index) => {\n    elevations[`elevation${index}`] = {\n      boxShadow: shadow\n    };\n  });\n  return _extends({\n    /* Styles applied to the root element. */\n    root: {\n      backgroundColor: theme.palette.background.paper,\n      color: theme.palette.text.primary,\n      transition: theme.transitions.create('box-shadow')\n    },\n\n    /* Styles applied to the root element if `square={false}`. */\n    rounded: {\n      borderRadius: theme.shape.borderRadius\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"`. */\n    outlined: {\n      border: `1px solid ${theme.palette.divider}`\n    }\n  }, elevations);\n};\nconst Paper = /*#__PURE__*/React.forwardRef(function Paper(props, ref) {\n  const {\n    classes,\n    className,\n    component: Component = 'div',\n    square = false,\n    elevation = 1,\n    variant = 'elevation'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"classes\", \"className\", \"component\", \"square\", \"elevation\", \"variant\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, variant === 'outlined' ? classes.outlined : classes[`elevation${elevation}`], !square && classes.rounded),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Paper.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * Shadow depth, corresponds to `dp` in the spec.\n   * It accepts values between 0 and 24 inclusive.\n   */\n  elevation: chainPropTypes(PropTypes.number, props => {\n    const {\n      classes,\n      elevation\n    } = props; // in case `withStyles` fails to inject we don't need this warning\n\n    if (classes === undefined) {\n      return null;\n    }\n\n    if (elevation != null && classes[`elevation${elevation}`] === undefined) {\n      return new Error(`Material-UI: This elevation \\`${elevation}\\` is not implemented.`);\n    }\n\n    return null;\n  }),\n\n  /**\n   * If `true`, rounded corners are disabled.\n   */\n  square: PropTypes.bool,\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['elevation', 'outlined'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiPaper'\n})(Paper);"]},"metadata":{},"sourceType":"module"}