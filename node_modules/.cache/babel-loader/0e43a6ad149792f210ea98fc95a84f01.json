{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nexport const styles = theme => ({\n  /* Styles applied to the root element. */\n  root: {\n    width: '100%',\n    marginLeft: 'auto',\n    boxSizing: 'border-box',\n    marginRight: 'auto',\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(2),\n    display: 'block',\n    // Fix IE 11 layout when used with main.\n    [theme.breakpoints.up('sm')]: {\n      paddingLeft: theme.spacing(3),\n      paddingRight: theme.spacing(3)\n    }\n  },\n\n  /* Styles applied to the root element if `disableGutters={true}`. */\n  disableGutters: {\n    paddingLeft: 0,\n    paddingRight: 0\n  },\n\n  /* Styles applied to the root element if `fixed={true}`. */\n  fixed: Object.keys(theme.breakpoints.values).reduce((acc, breakpoint) => {\n    const value = theme.breakpoints.values[breakpoint];\n\n    if (value !== 0) {\n      acc[theme.breakpoints.up(breakpoint)] = {\n        maxWidth: value\n      };\n    }\n\n    return acc;\n  }, {}),\n\n  /* Styles applied to the root element if `maxWidth=\"xs\"`. */\n  maxWidthXs: {\n    [theme.breakpoints.up('xs')]: {\n      maxWidth: Math.max(theme.breakpoints.values.xs, 444)\n    }\n  },\n\n  /* Styles applied to the root element if `maxWidth=\"sm\"`. */\n  maxWidthSm: {\n    [theme.breakpoints.up('sm')]: {\n      maxWidth: theme.breakpoints.values.sm\n    }\n  },\n\n  /* Styles applied to the root element if `maxWidth=\"md\"`. */\n  maxWidthMd: {\n    [theme.breakpoints.up('md')]: {\n      maxWidth: theme.breakpoints.values.md\n    }\n  },\n\n  /* Styles applied to the root element if `maxWidth=\"lg\"`. */\n  maxWidthLg: {\n    [theme.breakpoints.up('lg')]: {\n      maxWidth: theme.breakpoints.values.lg\n    }\n  },\n\n  /* Styles applied to the root element if `maxWidth=\"xl\"`. */\n  maxWidthXl: {\n    [theme.breakpoints.up('xl')]: {\n      maxWidth: theme.breakpoints.values.xl\n    }\n  }\n});\nconst Container = /*#__PURE__*/React.forwardRef(function Container(props, ref) {\n  const {\n    classes,\n    className,\n    component: Component = 'div',\n    disableGutters = false,\n    fixed = false,\n    maxWidth = 'lg'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"classes\", \"className\", \"component\", \"disableGutters\", \"fixed\", \"maxWidth\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, fixed && classes.fixed, disableGutters && classes.disableGutters, maxWidth !== false && classes[`maxWidth${capitalize(String(maxWidth))}`]),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Container.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * @ignore\n   */\n  children: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, the left and right padding is removed.\n   */\n  disableGutters: PropTypes.bool,\n\n  /**\n   * Set the max-width to match the min-width of the current breakpoint.\n   * This is useful if you'd prefer to design for a fixed set of sizes\n   * instead of trying to accommodate a fully fluid viewport.\n   * It's fluid by default.\n   */\n  fixed: PropTypes.bool,\n\n  /**\n   * Determine the max-width of the container.\n   * The container width grows with the size of the screen.\n   * Set to `false` to disable `maxWidth`.\n   */\n  maxWidth: PropTypes.oneOf(['lg', 'md', 'sm', 'xl', 'xs', false])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiContainer'\n})(Container);","map":{"version":3,"sources":["/home/ovesh/Desktop/MukeshParmar_Project/React/musix/node_modules/@material-ui/core/es/Container/Container.js"],"names":["_extends","_objectWithoutPropertiesLoose","React","PropTypes","clsx","withStyles","capitalize","styles","theme","root","width","marginLeft","boxSizing","marginRight","paddingLeft","spacing","paddingRight","display","breakpoints","up","disableGutters","fixed","Object","keys","values","reduce","acc","breakpoint","value","maxWidth","maxWidthXs","Math","max","xs","maxWidthSm","sm","maxWidthMd","md","maxWidthLg","lg","maxWidthXl","xl","Container","forwardRef","props","ref","classes","className","component","Component","other","createElement","String","process","env","NODE_ENV","propTypes","children","node","isRequired","object","string","elementType","bool","oneOf","name"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nexport const styles = theme => ({\n  /* Styles applied to the root element. */\n  root: {\n    width: '100%',\n    marginLeft: 'auto',\n    boxSizing: 'border-box',\n    marginRight: 'auto',\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(2),\n    display: 'block',\n    // Fix IE 11 layout when used with main.\n    [theme.breakpoints.up('sm')]: {\n      paddingLeft: theme.spacing(3),\n      paddingRight: theme.spacing(3)\n    }\n  },\n\n  /* Styles applied to the root element if `disableGutters={true}`. */\n  disableGutters: {\n    paddingLeft: 0,\n    paddingRight: 0\n  },\n\n  /* Styles applied to the root element if `fixed={true}`. */\n  fixed: Object.keys(theme.breakpoints.values).reduce((acc, breakpoint) => {\n    const value = theme.breakpoints.values[breakpoint];\n\n    if (value !== 0) {\n      acc[theme.breakpoints.up(breakpoint)] = {\n        maxWidth: value\n      };\n    }\n\n    return acc;\n  }, {}),\n\n  /* Styles applied to the root element if `maxWidth=\"xs\"`. */\n  maxWidthXs: {\n    [theme.breakpoints.up('xs')]: {\n      maxWidth: Math.max(theme.breakpoints.values.xs, 444)\n    }\n  },\n\n  /* Styles applied to the root element if `maxWidth=\"sm\"`. */\n  maxWidthSm: {\n    [theme.breakpoints.up('sm')]: {\n      maxWidth: theme.breakpoints.values.sm\n    }\n  },\n\n  /* Styles applied to the root element if `maxWidth=\"md\"`. */\n  maxWidthMd: {\n    [theme.breakpoints.up('md')]: {\n      maxWidth: theme.breakpoints.values.md\n    }\n  },\n\n  /* Styles applied to the root element if `maxWidth=\"lg\"`. */\n  maxWidthLg: {\n    [theme.breakpoints.up('lg')]: {\n      maxWidth: theme.breakpoints.values.lg\n    }\n  },\n\n  /* Styles applied to the root element if `maxWidth=\"xl\"`. */\n  maxWidthXl: {\n    [theme.breakpoints.up('xl')]: {\n      maxWidth: theme.breakpoints.values.xl\n    }\n  }\n});\nconst Container = /*#__PURE__*/React.forwardRef(function Container(props, ref) {\n  const {\n    classes,\n    className,\n    component: Component = 'div',\n    disableGutters = false,\n    fixed = false,\n    maxWidth = 'lg'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"classes\", \"className\", \"component\", \"disableGutters\", \"fixed\", \"maxWidth\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, fixed && classes.fixed, disableGutters && classes.disableGutters, maxWidth !== false && classes[`maxWidth${capitalize(String(maxWidth))}`]),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Container.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * @ignore\n   */\n  children: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, the left and right padding is removed.\n   */\n  disableGutters: PropTypes.bool,\n\n  /**\n   * Set the max-width to match the min-width of the current breakpoint.\n   * This is useful if you'd prefer to design for a fixed set of sizes\n   * instead of trying to accommodate a fully fluid viewport.\n   * It's fluid by default.\n   */\n  fixed: PropTypes.bool,\n\n  /**\n   * Determine the max-width of the container.\n   * The container width grows with the size of the screen.\n   * Set to `false` to disable `maxWidth`.\n   */\n  maxWidth: PropTypes.oneOf(['lg', 'md', 'sm', 'xl', 'xs', false])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiContainer'\n})(Container);"]},"metadata":{},"sourceType":"module"}