{"ast":null,"code":"import _slicedToArray from \"/home/ovesh/Desktop/MukeshParmar_Project/React/musix/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport * as ReactDOM from 'react-dom';\nimport clsx from 'clsx';\nimport { elementTypeAcceptingRef, refType } from '@material-ui/utils';\nimport useForkRef from '../utils/useForkRef';\nimport useEventCallback from '../utils/useEventCallback';\nimport withStyles from '../styles/withStyles';\nimport useIsFocusVisible from '../utils/useIsFocusVisible';\nimport TouchRipple from './TouchRipple';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'inline-flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    position: 'relative',\n    WebkitTapHighlightColor: 'transparent',\n    backgroundColor: 'transparent',\n    // Reset default value\n    // We disable the focus ring for mouse, touch and keyboard users.\n    outline: 0,\n    border: 0,\n    margin: 0,\n    // Remove the margin in Safari\n    borderRadius: 0,\n    padding: 0,\n    // Remove the padding in Firefox\n    cursor: 'pointer',\n    userSelect: 'none',\n    verticalAlign: 'middle',\n    '-moz-appearance': 'none',\n    // Reset\n    '-webkit-appearance': 'none',\n    // Reset\n    textDecoration: 'none',\n    // So we take precedent over the style of a native <a /> element.\n    color: 'inherit',\n    '&::-moz-focus-inner': {\n      borderStyle: 'none' // Remove Firefox dotted outline.\n\n    },\n    '&$disabled': {\n      pointerEvents: 'none',\n      // Disable link interactions\n      cursor: 'default'\n    },\n    '@media print': {\n      colorAdjust: 'exact'\n    }\n  },\n\n  /* Pseudo-class applied to the root element if `disabled={true}`. */\n  disabled: {},\n\n  /* Pseudo-class applied to the root element if keyboard focused. */\n  focusVisible: {}\n};\n/**\n * `ButtonBase` contains as few styles as possible.\n * It aims to be a simple building block for creating a button.\n * It contains a load of style reset and some focus/ripple logic.\n */\n\nvar ButtonBase = /*#__PURE__*/React.forwardRef(function ButtonBase(props, ref) {\n  var action = props.action,\n      buttonRefProp = props.buttonRef,\n      _props$centerRipple = props.centerRipple,\n      centerRipple = _props$centerRipple === void 0 ? false : _props$centerRipple,\n      children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      component = _props$component === void 0 ? 'button' : _props$component,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      _props$disableRipple = props.disableRipple,\n      disableRipple = _props$disableRipple === void 0 ? false : _props$disableRipple,\n      _props$disableTouchRi = props.disableTouchRipple,\n      disableTouchRipple = _props$disableTouchRi === void 0 ? false : _props$disableTouchRi,\n      _props$focusRipple = props.focusRipple,\n      focusRipple = _props$focusRipple === void 0 ? false : _props$focusRipple,\n      focusVisibleClassName = props.focusVisibleClassName,\n      onBlur = props.onBlur,\n      onClick = props.onClick,\n      onFocus = props.onFocus,\n      onFocusVisible = props.onFocusVisible,\n      onKeyDown = props.onKeyDown,\n      onKeyUp = props.onKeyUp,\n      onMouseDown = props.onMouseDown,\n      onMouseLeave = props.onMouseLeave,\n      onMouseUp = props.onMouseUp,\n      onTouchEnd = props.onTouchEnd,\n      onTouchMove = props.onTouchMove,\n      onTouchStart = props.onTouchStart,\n      onDragLeave = props.onDragLeave,\n      _props$tabIndex = props.tabIndex,\n      tabIndex = _props$tabIndex === void 0 ? 0 : _props$tabIndex,\n      TouchRippleProps = props.TouchRippleProps,\n      _props$type = props.type,\n      type = _props$type === void 0 ? 'button' : _props$type,\n      other = _objectWithoutPropertiesLoose(props, [\"action\", \"buttonRef\", \"centerRipple\", \"children\", \"classes\", \"className\", \"component\", \"disabled\", \"disableRipple\", \"disableTouchRipple\", \"focusRipple\", \"focusVisibleClassName\", \"onBlur\", \"onClick\", \"onFocus\", \"onFocusVisible\", \"onKeyDown\", \"onKeyUp\", \"onMouseDown\", \"onMouseLeave\", \"onMouseUp\", \"onTouchEnd\", \"onTouchMove\", \"onTouchStart\", \"onDragLeave\", \"tabIndex\", \"TouchRippleProps\", \"type\"]);\n\n  var buttonRef = React.useRef(null);\n\n  function getButtonNode() {\n    // #StrictMode ready\n    return ReactDOM.findDOMNode(buttonRef.current);\n  }\n\n  var rippleRef = React.useRef(null);\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      focusVisible = _React$useState2[0],\n      setFocusVisible = _React$useState2[1];\n\n  if (disabled && focusVisible) {\n    setFocusVisible(false);\n  }\n\n  var _useIsFocusVisible = useIsFocusVisible(),\n      isFocusVisible = _useIsFocusVisible.isFocusVisible,\n      onBlurVisible = _useIsFocusVisible.onBlurVisible,\n      focusVisibleRef = _useIsFocusVisible.ref;\n\n  React.useImperativeHandle(action, function () {\n    return {\n      focusVisible: function focusVisible() {\n        setFocusVisible(true);\n        buttonRef.current.focus();\n      }\n    };\n  }, []);\n  React.useEffect(function () {\n    if (focusVisible && focusRipple && !disableRipple) {\n      rippleRef.current.pulsate();\n    }\n  }, [disableRipple, focusRipple, focusVisible]);\n\n  function useRippleHandler(rippleAction, eventCallback) {\n    var skipRippleAction = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : disableTouchRipple;\n    return useEventCallback(function (event) {\n      if (eventCallback) {\n        eventCallback(event);\n      }\n\n      var ignore = skipRippleAction;\n\n      if (!ignore && rippleRef.current) {\n        rippleRef.current[rippleAction](event);\n      }\n\n      return true;\n    });\n  }\n\n  var handleMouseDown = useRippleHandler('start', onMouseDown);\n  var handleDragLeave = useRippleHandler('stop', onDragLeave);\n  var handleMouseUp = useRippleHandler('stop', onMouseUp);\n  var handleMouseLeave = useRippleHandler('stop', function (event) {\n    if (focusVisible) {\n      event.preventDefault();\n    }\n\n    if (onMouseLeave) {\n      onMouseLeave(event);\n    }\n  });\n  var handleTouchStart = useRippleHandler('start', onTouchStart);\n  var handleTouchEnd = useRippleHandler('stop', onTouchEnd);\n  var handleTouchMove = useRippleHandler('stop', onTouchMove);\n  var handleBlur = useRippleHandler('stop', function (event) {\n    if (focusVisible) {\n      onBlurVisible(event);\n      setFocusVisible(false);\n    }\n\n    if (onBlur) {\n      onBlur(event);\n    }\n  }, false);\n  var handleFocus = useEventCallback(function (event) {\n    // Fix for https://github.com/facebook/react/issues/7769\n    if (!buttonRef.current) {\n      buttonRef.current = event.currentTarget;\n    }\n\n    if (isFocusVisible(event)) {\n      setFocusVisible(true);\n\n      if (onFocusVisible) {\n        onFocusVisible(event);\n      }\n    }\n\n    if (onFocus) {\n      onFocus(event);\n    }\n  });\n\n  var isNonNativeButton = function isNonNativeButton() {\n    var button = getButtonNode();\n    return component && component !== 'button' && !(button.tagName === 'A' && button.href);\n  };\n  /**\n   * IE 11 shim for https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/repeat\n   */\n\n\n  var keydownRef = React.useRef(false);\n  var handleKeyDown = useEventCallback(function (event) {\n    // Check if key is already down to avoid repeats being counted as multiple activations\n    if (focusRipple && !keydownRef.current && focusVisible && rippleRef.current && event.key === ' ') {\n      keydownRef.current = true;\n      event.persist();\n      rippleRef.current.stop(event, function () {\n        rippleRef.current.start(event);\n      });\n    }\n\n    if (event.target === event.currentTarget && isNonNativeButton() && event.key === ' ') {\n      event.preventDefault();\n    }\n\n    if (onKeyDown) {\n      onKeyDown(event);\n    } // Keyboard accessibility for non interactive elements\n\n\n    if (event.target === event.currentTarget && isNonNativeButton() && event.key === 'Enter' && !disabled) {\n      event.preventDefault();\n\n      if (onClick) {\n        onClick(event);\n      }\n    }\n  });\n  var handleKeyUp = useEventCallback(function (event) {\n    // calling preventDefault in keyUp on a <button> will not dispatch a click event if Space is pressed\n    // https://codesandbox.io/s/button-keyup-preventdefault-dn7f0\n    if (focusRipple && event.key === ' ' && rippleRef.current && focusVisible && !event.defaultPrevented) {\n      keydownRef.current = false;\n      event.persist();\n      rippleRef.current.stop(event, function () {\n        rippleRef.current.pulsate(event);\n      });\n    }\n\n    if (onKeyUp) {\n      onKeyUp(event);\n    } // Keyboard accessibility for non interactive elements\n\n\n    if (onClick && event.target === event.currentTarget && isNonNativeButton() && event.key === ' ' && !event.defaultPrevented) {\n      onClick(event);\n    }\n  });\n  var ComponentProp = component;\n\n  if (ComponentProp === 'button' && other.href) {\n    ComponentProp = 'a';\n  }\n\n  var buttonProps = {};\n\n  if (ComponentProp === 'button') {\n    buttonProps.type = type;\n    buttonProps.disabled = disabled;\n  } else {\n    if (ComponentProp !== 'a' || !other.href) {\n      buttonProps.role = 'button';\n    }\n\n    buttonProps['aria-disabled'] = disabled;\n  }\n\n  var handleUserRef = useForkRef(buttonRefProp, ref);\n  var handleOwnRef = useForkRef(focusVisibleRef, buttonRef);\n  var handleRef = useForkRef(handleUserRef, handleOwnRef);\n\n  var _React$useState3 = React.useState(false),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      mountedState = _React$useState4[0],\n      setMountedState = _React$useState4[1];\n\n  React.useEffect(function () {\n    setMountedState(true);\n  }, []);\n  var enableTouchRipple = mountedState && !disableRipple && !disabled;\n\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useEffect(function () {\n      if (enableTouchRipple && !rippleRef.current) {\n        console.error(['Material-UI: The `component` prop provided to ButtonBase is invalid.', 'Please make sure the children prop is rendered in this custom component.'].join('\\n'));\n      }\n    }, [enableTouchRipple]);\n  }\n\n  return /*#__PURE__*/React.createElement(ComponentProp, _extends({\n    className: clsx(classes.root, className, focusVisible && [classes.focusVisible, focusVisibleClassName], disabled && classes.disabled),\n    onBlur: handleBlur,\n    onClick: onClick,\n    onFocus: handleFocus,\n    onKeyDown: handleKeyDown,\n    onKeyUp: handleKeyUp,\n    onMouseDown: handleMouseDown,\n    onMouseLeave: handleMouseLeave,\n    onMouseUp: handleMouseUp,\n    onDragLeave: handleDragLeave,\n    onTouchEnd: handleTouchEnd,\n    onTouchMove: handleTouchMove,\n    onTouchStart: handleTouchStart,\n    ref: handleRef,\n    tabIndex: disabled ? -1 : tabIndex\n  }, buttonProps, other), children, enableTouchRipple ?\n  /*#__PURE__*/\n\n  /* TouchRipple is only needed client-side, x2 boost on the server. */\n  React.createElement(TouchRipple, _extends({\n    ref: rippleRef,\n    center: centerRipple\n  }, TouchRippleProps)) : null);\n});\nprocess.env.NODE_ENV !== \"production\" ? ButtonBase.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * A ref for imperative actions.\n   * It currently only supports `focusVisible()` action.\n   */\n  action: refType,\n\n  /**\n   * @ignore\n   *\n   * Use that prop to pass a ref to the native button component.\n   * @deprecated Use `ref` instead.\n   */\n  buttonRef: refType,\n\n  /**\n   * If `true`, the ripples will be centered.\n   * They won't start at the cursor interaction position.\n   */\n  centerRipple: PropTypes.bool,\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: elementTypeAcceptingRef,\n\n  /**\n   * If `true`, the base button will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   *\n   * ⚠️ Without a ripple there is no styling for :focus-visible by default. Be sure\n   * to highlight the element by applying separate styles with the `focusVisibleClassName`.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * If `true`, the touch ripple effect will be disabled.\n   */\n  disableTouchRipple: PropTypes.bool,\n\n  /**\n   * If `true`, the base button will have a keyboard focus ripple.\n   */\n  focusRipple: PropTypes.bool,\n\n  /**\n   * This prop can help a person know which element has the keyboard focus.\n   * The class name will be applied when the element gain the focus through a keyboard interaction.\n   * It's a polyfill for the [CSS :focus-visible selector](https://drafts.csswg.org/selectors-4/#the-focus-visible-pseudo).\n   * The rationale for using this feature [is explained here](https://github.com/WICG/focus-visible/blob/master/explainer.md).\n   * A [polyfill can be used](https://github.com/WICG/focus-visible) to apply a `focus-visible` class to other components\n   * if needed.\n   */\n  focusVisibleClassName: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  href: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onClick: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onDragLeave: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * Callback fired when the component is focused with a keyboard.\n   * We trigger a `onFocus` callback too.\n   */\n  onFocusVisible: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onKeyDown: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onKeyUp: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onMouseDown: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onMouseLeave: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onMouseUp: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onTouchEnd: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onTouchMove: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onTouchStart: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * Props applied to the `TouchRipple` element.\n   */\n  TouchRippleProps: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  type: PropTypes.oneOfType([PropTypes.oneOf(['button', 'reset', 'submit']), PropTypes.string])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiButtonBase'\n})(ButtonBase);","map":{"version":3,"sources":["/home/ovesh/Desktop/MukeshParmar_Project/React/musix/node_modules/@material-ui/core/es/ButtonBase/ButtonBase.js"],"names":["_extends","_objectWithoutPropertiesLoose","React","PropTypes","ReactDOM","clsx","elementTypeAcceptingRef","refType","useForkRef","useEventCallback","withStyles","useIsFocusVisible","TouchRipple","styles","root","display","alignItems","justifyContent","position","WebkitTapHighlightColor","backgroundColor","outline","border","margin","borderRadius","padding","cursor","userSelect","verticalAlign","textDecoration","color","borderStyle","pointerEvents","colorAdjust","disabled","focusVisible","ButtonBase","forwardRef","props","ref","action","buttonRefProp","buttonRef","centerRipple","children","classes","className","component","disableRipple","disableTouchRipple","focusRipple","focusVisibleClassName","onBlur","onClick","onFocus","onFocusVisible","onKeyDown","onKeyUp","onMouseDown","onMouseLeave","onMouseUp","onTouchEnd","onTouchMove","onTouchStart","onDragLeave","tabIndex","TouchRippleProps","type","other","useRef","getButtonNode","findDOMNode","current","rippleRef","useState","setFocusVisible","isFocusVisible","onBlurVisible","focusVisibleRef","useImperativeHandle","focus","useEffect","pulsate","useRippleHandler","rippleAction","eventCallback","skipRippleAction","event","ignore","handleMouseDown","handleDragLeave","handleMouseUp","handleMouseLeave","preventDefault","handleTouchStart","handleTouchEnd","handleTouchMove","handleBlur","handleFocus","currentTarget","isNonNativeButton","button","tagName","href","keydownRef","handleKeyDown","key","persist","stop","start","target","handleKeyUp","defaultPrevented","ComponentProp","buttonProps","role","handleUserRef","handleOwnRef","handleRef","mountedState","setMountedState","enableTouchRipple","process","env","NODE_ENV","console","error","join","createElement","center","propTypes","bool","node","object","string","func","oneOfType","number","oneOf","name"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport * as ReactDOM from 'react-dom';\nimport clsx from 'clsx';\nimport { elementTypeAcceptingRef, refType } from '@material-ui/utils';\nimport useForkRef from '../utils/useForkRef';\nimport useEventCallback from '../utils/useEventCallback';\nimport withStyles from '../styles/withStyles';\nimport useIsFocusVisible from '../utils/useIsFocusVisible';\nimport TouchRipple from './TouchRipple';\nexport const styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'inline-flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    position: 'relative',\n    WebkitTapHighlightColor: 'transparent',\n    backgroundColor: 'transparent',\n    // Reset default value\n    // We disable the focus ring for mouse, touch and keyboard users.\n    outline: 0,\n    border: 0,\n    margin: 0,\n    // Remove the margin in Safari\n    borderRadius: 0,\n    padding: 0,\n    // Remove the padding in Firefox\n    cursor: 'pointer',\n    userSelect: 'none',\n    verticalAlign: 'middle',\n    '-moz-appearance': 'none',\n    // Reset\n    '-webkit-appearance': 'none',\n    // Reset\n    textDecoration: 'none',\n    // So we take precedent over the style of a native <a /> element.\n    color: 'inherit',\n    '&::-moz-focus-inner': {\n      borderStyle: 'none' // Remove Firefox dotted outline.\n\n    },\n    '&$disabled': {\n      pointerEvents: 'none',\n      // Disable link interactions\n      cursor: 'default'\n    },\n    '@media print': {\n      colorAdjust: 'exact'\n    }\n  },\n\n  /* Pseudo-class applied to the root element if `disabled={true}`. */\n  disabled: {},\n\n  /* Pseudo-class applied to the root element if keyboard focused. */\n  focusVisible: {}\n};\n/**\n * `ButtonBase` contains as few styles as possible.\n * It aims to be a simple building block for creating a button.\n * It contains a load of style reset and some focus/ripple logic.\n */\n\nconst ButtonBase = /*#__PURE__*/React.forwardRef(function ButtonBase(props, ref) {\n  const {\n    action,\n    buttonRef: buttonRefProp,\n    centerRipple = false,\n    children,\n    classes,\n    className,\n    component = 'button',\n    disabled = false,\n    disableRipple = false,\n    disableTouchRipple = false,\n    focusRipple = false,\n    focusVisibleClassName,\n    onBlur,\n    onClick,\n    onFocus,\n    onFocusVisible,\n    onKeyDown,\n    onKeyUp,\n    onMouseDown,\n    onMouseLeave,\n    onMouseUp,\n    onTouchEnd,\n    onTouchMove,\n    onTouchStart,\n    onDragLeave,\n    tabIndex = 0,\n    TouchRippleProps,\n    type = 'button'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"action\", \"buttonRef\", \"centerRipple\", \"children\", \"classes\", \"className\", \"component\", \"disabled\", \"disableRipple\", \"disableTouchRipple\", \"focusRipple\", \"focusVisibleClassName\", \"onBlur\", \"onClick\", \"onFocus\", \"onFocusVisible\", \"onKeyDown\", \"onKeyUp\", \"onMouseDown\", \"onMouseLeave\", \"onMouseUp\", \"onTouchEnd\", \"onTouchMove\", \"onTouchStart\", \"onDragLeave\", \"tabIndex\", \"TouchRippleProps\", \"type\"]);\n\n  const buttonRef = React.useRef(null);\n\n  function getButtonNode() {\n    // #StrictMode ready\n    return ReactDOM.findDOMNode(buttonRef.current);\n  }\n\n  const rippleRef = React.useRef(null);\n  const [focusVisible, setFocusVisible] = React.useState(false);\n\n  if (disabled && focusVisible) {\n    setFocusVisible(false);\n  }\n\n  const {\n    isFocusVisible,\n    onBlurVisible,\n    ref: focusVisibleRef\n  } = useIsFocusVisible();\n  React.useImperativeHandle(action, () => ({\n    focusVisible: () => {\n      setFocusVisible(true);\n      buttonRef.current.focus();\n    }\n  }), []);\n  React.useEffect(() => {\n    if (focusVisible && focusRipple && !disableRipple) {\n      rippleRef.current.pulsate();\n    }\n  }, [disableRipple, focusRipple, focusVisible]);\n\n  function useRippleHandler(rippleAction, eventCallback, skipRippleAction = disableTouchRipple) {\n    return useEventCallback(event => {\n      if (eventCallback) {\n        eventCallback(event);\n      }\n\n      const ignore = skipRippleAction;\n\n      if (!ignore && rippleRef.current) {\n        rippleRef.current[rippleAction](event);\n      }\n\n      return true;\n    });\n  }\n\n  const handleMouseDown = useRippleHandler('start', onMouseDown);\n  const handleDragLeave = useRippleHandler('stop', onDragLeave);\n  const handleMouseUp = useRippleHandler('stop', onMouseUp);\n  const handleMouseLeave = useRippleHandler('stop', event => {\n    if (focusVisible) {\n      event.preventDefault();\n    }\n\n    if (onMouseLeave) {\n      onMouseLeave(event);\n    }\n  });\n  const handleTouchStart = useRippleHandler('start', onTouchStart);\n  const handleTouchEnd = useRippleHandler('stop', onTouchEnd);\n  const handleTouchMove = useRippleHandler('stop', onTouchMove);\n  const handleBlur = useRippleHandler('stop', event => {\n    if (focusVisible) {\n      onBlurVisible(event);\n      setFocusVisible(false);\n    }\n\n    if (onBlur) {\n      onBlur(event);\n    }\n  }, false);\n  const handleFocus = useEventCallback(event => {\n    // Fix for https://github.com/facebook/react/issues/7769\n    if (!buttonRef.current) {\n      buttonRef.current = event.currentTarget;\n    }\n\n    if (isFocusVisible(event)) {\n      setFocusVisible(true);\n\n      if (onFocusVisible) {\n        onFocusVisible(event);\n      }\n    }\n\n    if (onFocus) {\n      onFocus(event);\n    }\n  });\n\n  const isNonNativeButton = () => {\n    const button = getButtonNode();\n    return component && component !== 'button' && !(button.tagName === 'A' && button.href);\n  };\n  /**\n   * IE 11 shim for https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/repeat\n   */\n\n\n  const keydownRef = React.useRef(false);\n  const handleKeyDown = useEventCallback(event => {\n    // Check if key is already down to avoid repeats being counted as multiple activations\n    if (focusRipple && !keydownRef.current && focusVisible && rippleRef.current && event.key === ' ') {\n      keydownRef.current = true;\n      event.persist();\n      rippleRef.current.stop(event, () => {\n        rippleRef.current.start(event);\n      });\n    }\n\n    if (event.target === event.currentTarget && isNonNativeButton() && event.key === ' ') {\n      event.preventDefault();\n    }\n\n    if (onKeyDown) {\n      onKeyDown(event);\n    } // Keyboard accessibility for non interactive elements\n\n\n    if (event.target === event.currentTarget && isNonNativeButton() && event.key === 'Enter' && !disabled) {\n      event.preventDefault();\n\n      if (onClick) {\n        onClick(event);\n      }\n    }\n  });\n  const handleKeyUp = useEventCallback(event => {\n    // calling preventDefault in keyUp on a <button> will not dispatch a click event if Space is pressed\n    // https://codesandbox.io/s/button-keyup-preventdefault-dn7f0\n    if (focusRipple && event.key === ' ' && rippleRef.current && focusVisible && !event.defaultPrevented) {\n      keydownRef.current = false;\n      event.persist();\n      rippleRef.current.stop(event, () => {\n        rippleRef.current.pulsate(event);\n      });\n    }\n\n    if (onKeyUp) {\n      onKeyUp(event);\n    } // Keyboard accessibility for non interactive elements\n\n\n    if (onClick && event.target === event.currentTarget && isNonNativeButton() && event.key === ' ' && !event.defaultPrevented) {\n      onClick(event);\n    }\n  });\n  let ComponentProp = component;\n\n  if (ComponentProp === 'button' && other.href) {\n    ComponentProp = 'a';\n  }\n\n  const buttonProps = {};\n\n  if (ComponentProp === 'button') {\n    buttonProps.type = type;\n    buttonProps.disabled = disabled;\n  } else {\n    if (ComponentProp !== 'a' || !other.href) {\n      buttonProps.role = 'button';\n    }\n\n    buttonProps['aria-disabled'] = disabled;\n  }\n\n  const handleUserRef = useForkRef(buttonRefProp, ref);\n  const handleOwnRef = useForkRef(focusVisibleRef, buttonRef);\n  const handleRef = useForkRef(handleUserRef, handleOwnRef);\n  const [mountedState, setMountedState] = React.useState(false);\n  React.useEffect(() => {\n    setMountedState(true);\n  }, []);\n  const enableTouchRipple = mountedState && !disableRipple && !disabled;\n\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useEffect(() => {\n      if (enableTouchRipple && !rippleRef.current) {\n        console.error(['Material-UI: The `component` prop provided to ButtonBase is invalid.', 'Please make sure the children prop is rendered in this custom component.'].join('\\n'));\n      }\n    }, [enableTouchRipple]);\n  }\n\n  return /*#__PURE__*/React.createElement(ComponentProp, _extends({\n    className: clsx(classes.root, className, focusVisible && [classes.focusVisible, focusVisibleClassName], disabled && classes.disabled),\n    onBlur: handleBlur,\n    onClick: onClick,\n    onFocus: handleFocus,\n    onKeyDown: handleKeyDown,\n    onKeyUp: handleKeyUp,\n    onMouseDown: handleMouseDown,\n    onMouseLeave: handleMouseLeave,\n    onMouseUp: handleMouseUp,\n    onDragLeave: handleDragLeave,\n    onTouchEnd: handleTouchEnd,\n    onTouchMove: handleTouchMove,\n    onTouchStart: handleTouchStart,\n    ref: handleRef,\n    tabIndex: disabled ? -1 : tabIndex\n  }, buttonProps, other), children, enableTouchRipple ?\n  /*#__PURE__*/\n\n  /* TouchRipple is only needed client-side, x2 boost on the server. */\n  React.createElement(TouchRipple, _extends({\n    ref: rippleRef,\n    center: centerRipple\n  }, TouchRippleProps)) : null);\n});\nprocess.env.NODE_ENV !== \"production\" ? ButtonBase.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * A ref for imperative actions.\n   * It currently only supports `focusVisible()` action.\n   */\n  action: refType,\n\n  /**\n   * @ignore\n   *\n   * Use that prop to pass a ref to the native button component.\n   * @deprecated Use `ref` instead.\n   */\n  buttonRef: refType,\n\n  /**\n   * If `true`, the ripples will be centered.\n   * They won't start at the cursor interaction position.\n   */\n  centerRipple: PropTypes.bool,\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: elementTypeAcceptingRef,\n\n  /**\n   * If `true`, the base button will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   *\n   * ⚠️ Without a ripple there is no styling for :focus-visible by default. Be sure\n   * to highlight the element by applying separate styles with the `focusVisibleClassName`.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * If `true`, the touch ripple effect will be disabled.\n   */\n  disableTouchRipple: PropTypes.bool,\n\n  /**\n   * If `true`, the base button will have a keyboard focus ripple.\n   */\n  focusRipple: PropTypes.bool,\n\n  /**\n   * This prop can help a person know which element has the keyboard focus.\n   * The class name will be applied when the element gain the focus through a keyboard interaction.\n   * It's a polyfill for the [CSS :focus-visible selector](https://drafts.csswg.org/selectors-4/#the-focus-visible-pseudo).\n   * The rationale for using this feature [is explained here](https://github.com/WICG/focus-visible/blob/master/explainer.md).\n   * A [polyfill can be used](https://github.com/WICG/focus-visible) to apply a `focus-visible` class to other components\n   * if needed.\n   */\n  focusVisibleClassName: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  href: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onClick: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onDragLeave: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * Callback fired when the component is focused with a keyboard.\n   * We trigger a `onFocus` callback too.\n   */\n  onFocusVisible: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onKeyDown: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onKeyUp: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onMouseDown: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onMouseLeave: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onMouseUp: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onTouchEnd: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onTouchMove: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onTouchStart: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * Props applied to the `TouchRipple` element.\n   */\n  TouchRippleProps: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  type: PropTypes.oneOfType([PropTypes.oneOf(['button', 'reset', 'submit']), PropTypes.string])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiButtonBase'\n})(ButtonBase);"]},"metadata":{},"sourceType":"module"}