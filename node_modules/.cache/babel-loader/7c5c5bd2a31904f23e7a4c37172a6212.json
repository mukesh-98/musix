{"ast":null,"code":"import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\"; // A grid component using the following libs as inspiration.\n//\n// For the implementation:\n// - https://getbootstrap.com/docs/4.3/layout/grid/\n// - https://github.com/kristoferjoseph/flexboxgrid/blob/master/src/css/flexboxgrid.css\n// - https://github.com/roylee0704/react-flexbox-grid\n// - https://material.angularjs.org/latest/layout/introduction\n//\n// Follow this flexbox Guide to better understand the underlying model:\n// - https://css-tricks.com/snippets/css/a-guide-to-flexbox/\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport requirePropFactory from '../utils/requirePropFactory';\nconst SPACINGS = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nconst GRID_SIZES = ['auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\n\nfunction generateGrid(globalStyles, theme, breakpoint) {\n  const styles = {};\n  GRID_SIZES.forEach(size => {\n    const key = `grid-${breakpoint}-${size}`;\n\n    if (size === true) {\n      // For the auto layouting\n      styles[key] = {\n        flexBasis: 0,\n        flexGrow: 1,\n        maxWidth: '100%'\n      };\n      return;\n    }\n\n    if (size === 'auto') {\n      styles[key] = {\n        flexBasis: 'auto',\n        flexGrow: 0,\n        maxWidth: 'none'\n      };\n      return;\n    } // Keep 7 significant numbers.\n\n\n    const width = `${Math.round(size / 12 * 10e7) / 10e5}%`; // Close to the bootstrap implementation:\n    // https://github.com/twbs/bootstrap/blob/8fccaa2439e97ec72a4b7dc42ccc1f649790adb0/scss/mixins/_grid.scss#L41\n\n    styles[key] = {\n      flexBasis: width,\n      flexGrow: 0,\n      maxWidth: width\n    };\n  }); // No need for a media query for the first size.\n\n  if (breakpoint === 'xs') {\n    _extends(globalStyles, styles);\n  } else {\n    globalStyles[theme.breakpoints.up(breakpoint)] = styles;\n  }\n}\n\nfunction getOffset(val, div = 1) {\n  const parse = parseFloat(val);\n  return `${parse / div}${String(val).replace(String(parse), '') || 'px'}`;\n}\n\nfunction generateGutter(theme, breakpoint) {\n  const styles = {};\n  SPACINGS.forEach(spacing => {\n    const themeSpacing = theme.spacing(spacing);\n\n    if (themeSpacing === 0) {\n      return;\n    }\n\n    styles[`spacing-${breakpoint}-${spacing}`] = {\n      margin: `-${getOffset(themeSpacing, 2)}`,\n      width: `calc(100% + ${getOffset(themeSpacing)})`,\n      '& > $item': {\n        padding: getOffset(themeSpacing, 2)\n      }\n    };\n  });\n  return styles;\n} // Default CSS values\n// flex: '0 1 auto',\n// flexDirection: 'row',\n// alignItems: 'flex-start',\n// flexWrap: 'nowrap',\n// justifyContent: 'flex-start',\n\n\nexport const styles = theme => _extends({\n  /* Styles applied to the root element. */\n  root: {},\n\n  /* Styles applied to the root element if `container={true}`. */\n  container: {\n    boxSizing: 'border-box',\n    display: 'flex',\n    flexWrap: 'wrap',\n    width: '100%'\n  },\n\n  /* Styles applied to the root element if `item={true}`. */\n  item: {\n    boxSizing: 'border-box',\n    margin: '0' // For instance, it's useful when used with a `figure` element.\n\n  },\n\n  /* Styles applied to the root element if `zeroMinWidth={true}`. */\n  zeroMinWidth: {\n    minWidth: 0\n  },\n\n  /* Styles applied to the root element if `direction=\"column\"`. */\n  'direction-xs-column': {\n    flexDirection: 'column'\n  },\n\n  /* Styles applied to the root element if `direction=\"column-reverse\"`. */\n  'direction-xs-column-reverse': {\n    flexDirection: 'column-reverse'\n  },\n\n  /* Styles applied to the root element if `direction=\"row-reverse\"`. */\n  'direction-xs-row-reverse': {\n    flexDirection: 'row-reverse'\n  },\n\n  /* Styles applied to the root element if `wrap=\"nowrap\"`. */\n  'wrap-xs-nowrap': {\n    flexWrap: 'nowrap'\n  },\n\n  /* Styles applied to the root element if `wrap=\"reverse\"`. */\n  'wrap-xs-wrap-reverse': {\n    flexWrap: 'wrap-reverse'\n  },\n\n  /* Styles applied to the root element if `alignItems=\"center\"`. */\n  'align-items-xs-center': {\n    alignItems: 'center'\n  },\n\n  /* Styles applied to the root element if `alignItems=\"flex-start\"`. */\n  'align-items-xs-flex-start': {\n    alignItems: 'flex-start'\n  },\n\n  /* Styles applied to the root element if `alignItems=\"flex-end\"`. */\n  'align-items-xs-flex-end': {\n    alignItems: 'flex-end'\n  },\n\n  /* Styles applied to the root element if `alignItems=\"baseline\"`. */\n  'align-items-xs-baseline': {\n    alignItems: 'baseline'\n  },\n\n  /* Styles applied to the root element if `alignContent=\"center\"`. */\n  'align-content-xs-center': {\n    alignContent: 'center'\n  },\n\n  /* Styles applied to the root element if `alignContent=\"flex-start\"`. */\n  'align-content-xs-flex-start': {\n    alignContent: 'flex-start'\n  },\n\n  /* Styles applied to the root element if `alignContent=\"flex-end\"`. */\n  'align-content-xs-flex-end': {\n    alignContent: 'flex-end'\n  },\n\n  /* Styles applied to the root element if `alignContent=\"space-between\"`. */\n  'align-content-xs-space-between': {\n    alignContent: 'space-between'\n  },\n\n  /* Styles applied to the root element if `alignContent=\"space-around\"`. */\n  'align-content-xs-space-around': {\n    alignContent: 'space-around'\n  },\n\n  /* Styles applied to the root element if `justify=\"center\"`. */\n  'justify-xs-center': {\n    justifyContent: 'center'\n  },\n\n  /* Styles applied to the root element if `justify=\"flex-end\"`. */\n  'justify-xs-flex-end': {\n    justifyContent: 'flex-end'\n  },\n\n  /* Styles applied to the root element if `justify=\"space-between\"`. */\n  'justify-xs-space-between': {\n    justifyContent: 'space-between'\n  },\n\n  /* Styles applied to the root element if `justify=\"space-around\"`. */\n  'justify-xs-space-around': {\n    justifyContent: 'space-around'\n  },\n\n  /* Styles applied to the root element if `justify=\"space-evenly\"`. */\n  'justify-xs-space-evenly': {\n    justifyContent: 'space-evenly'\n  }\n}, generateGutter(theme, 'xs'), theme.breakpoints.keys.reduce((accumulator, key) => {\n  // Use side effect over immutability for better performance.\n  generateGrid(accumulator, theme, key);\n  return accumulator;\n}, {}));\nconst Grid = /*#__PURE__*/React.forwardRef(function Grid(props, ref) {\n  const {\n    alignContent = 'stretch',\n    alignItems = 'stretch',\n    classes,\n    className: classNameProp,\n    component: Component = 'div',\n    container = false,\n    direction = 'row',\n    item = false,\n    justify = 'flex-start',\n    lg = false,\n    md = false,\n    sm = false,\n    spacing = 0,\n    wrap = 'wrap',\n    xl = false,\n    xs = false,\n    zeroMinWidth = false\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"alignContent\", \"alignItems\", \"classes\", \"className\", \"component\", \"container\", \"direction\", \"item\", \"justify\", \"lg\", \"md\", \"sm\", \"spacing\", \"wrap\", \"xl\", \"xs\", \"zeroMinWidth\"]);\n\n  const className = clsx(classes.root, classNameProp, container && [classes.container, spacing !== 0 && classes[`spacing-xs-${String(spacing)}`]], item && classes.item, zeroMinWidth && classes.zeroMinWidth, direction !== 'row' && classes[`direction-xs-${String(direction)}`], wrap !== 'wrap' && classes[`wrap-xs-${String(wrap)}`], alignItems !== 'stretch' && classes[`align-items-xs-${String(alignItems)}`], alignContent !== 'stretch' && classes[`align-content-xs-${String(alignContent)}`], justify !== 'flex-start' && classes[`justify-xs-${String(justify)}`], xs !== false && classes[`grid-xs-${String(xs)}`], sm !== false && classes[`grid-sm-${String(sm)}`], md !== false && classes[`grid-md-${String(md)}`], lg !== false && classes[`grid-lg-${String(lg)}`], xl !== false && classes[`grid-xl-${String(xl)}`]);\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: className,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Grid.propTypes = {\n  /**\n   * Defines the `align-content` style property.\n   * It's applied for all screen sizes.\n   */\n  alignContent: PropTypes.oneOf(['stretch', 'center', 'flex-start', 'flex-end', 'space-between', 'space-around']),\n\n  /**\n   * Defines the `align-items` style property.\n   * It's applied for all screen sizes.\n   */\n  alignItems: PropTypes.oneOf(['flex-start', 'center', 'flex-end', 'stretch', 'baseline']),\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, the component will have the flex *container* behavior.\n   * You should be wrapping *items* with a *container*.\n   */\n  container: PropTypes.bool,\n\n  /**\n   * Defines the `flex-direction` style property.\n   * It is applied for all screen sizes.\n   */\n  direction: PropTypes.oneOf(['row', 'row-reverse', 'column', 'column-reverse']),\n\n  /**\n   * If `true`, the component will have the flex *item* behavior.\n   * You should be wrapping *items* with a *container*.\n   */\n  item: PropTypes.bool,\n\n  /**\n   * Defines the `justify-content` style property.\n   * It is applied for all screen sizes.\n   */\n  justify: PropTypes.oneOf(['flex-start', 'center', 'flex-end', 'space-between', 'space-around', 'space-evenly']),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `lg` breakpoint and wider screens if not overridden.\n   */\n  lg: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `md` breakpoint and wider screens if not overridden.\n   */\n  md: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `sm` breakpoint and wider screens if not overridden.\n   */\n  sm: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * Defines the space between the type `item` component.\n   * It can only be used on a type `container` component.\n   */\n  spacing: PropTypes.oneOf(SPACINGS),\n\n  /**\n   * Defines the `flex-wrap` style property.\n   * It's applied for all screen sizes.\n   */\n  wrap: PropTypes.oneOf(['nowrap', 'wrap', 'wrap-reverse']),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `xl` breakpoint and wider screens.\n   */\n  xl: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for all the screen sizes with the lowest priority.\n   */\n  xs: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * If `true`, it sets `min-width: 0` on the item.\n   * Refer to the limitations section of the documentation to better understand the use case.\n   */\n  zeroMinWidth: PropTypes.bool\n} : void 0;\nconst StyledGrid = withStyles(styles, {\n  name: 'MuiGrid'\n})(Grid);\n\nif (process.env.NODE_ENV !== 'production') {\n  const requireProp = requirePropFactory('Grid');\n  StyledGrid.propTypes = _extends({}, StyledGrid.propTypes, {\n    alignContent: requireProp('container'),\n    alignItems: requireProp('container'),\n    direction: requireProp('container'),\n    justify: requireProp('container'),\n    lg: requireProp('item'),\n    md: requireProp('item'),\n    sm: requireProp('item'),\n    spacing: requireProp('container'),\n    wrap: requireProp('container'),\n    xs: requireProp('item'),\n    zeroMinWidth: requireProp('item')\n  });\n}\n\nexport default StyledGrid;","map":{"version":3,"sources":["/home/ovesh/Desktop/MukeshParmar_Project/React/musix/node_modules/@material-ui/core/es/Grid/Grid.js"],"names":["_objectWithoutPropertiesLoose","_extends","React","PropTypes","clsx","withStyles","requirePropFactory","SPACINGS","GRID_SIZES","generateGrid","globalStyles","theme","breakpoint","styles","forEach","size","key","flexBasis","flexGrow","maxWidth","width","Math","round","breakpoints","up","getOffset","val","div","parse","parseFloat","String","replace","generateGutter","spacing","themeSpacing","margin","padding","root","container","boxSizing","display","flexWrap","item","zeroMinWidth","minWidth","flexDirection","alignItems","alignContent","justifyContent","keys","reduce","accumulator","Grid","forwardRef","props","ref","classes","className","classNameProp","component","Component","direction","justify","lg","md","sm","wrap","xl","xs","other","createElement","process","env","NODE_ENV","propTypes","oneOf","children","node","object","isRequired","string","elementType","bool","StyledGrid","name","requireProp"],"mappings":"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","sourcesContent":["import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\n// A grid component using the following libs as inspiration.\n//\n// For the implementation:\n// - https://getbootstrap.com/docs/4.3/layout/grid/\n// - https://github.com/kristoferjoseph/flexboxgrid/blob/master/src/css/flexboxgrid.css\n// - https://github.com/roylee0704/react-flexbox-grid\n// - https://material.angularjs.org/latest/layout/introduction\n//\n// Follow this flexbox Guide to better understand the underlying model:\n// - https://css-tricks.com/snippets/css/a-guide-to-flexbox/\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport requirePropFactory from '../utils/requirePropFactory';\nconst SPACINGS = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nconst GRID_SIZES = ['auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\n\nfunction generateGrid(globalStyles, theme, breakpoint) {\n  const styles = {};\n  GRID_SIZES.forEach(size => {\n    const key = `grid-${breakpoint}-${size}`;\n\n    if (size === true) {\n      // For the auto layouting\n      styles[key] = {\n        flexBasis: 0,\n        flexGrow: 1,\n        maxWidth: '100%'\n      };\n      return;\n    }\n\n    if (size === 'auto') {\n      styles[key] = {\n        flexBasis: 'auto',\n        flexGrow: 0,\n        maxWidth: 'none'\n      };\n      return;\n    } // Keep 7 significant numbers.\n\n\n    const width = `${Math.round(size / 12 * 10e7) / 10e5}%`; // Close to the bootstrap implementation:\n    // https://github.com/twbs/bootstrap/blob/8fccaa2439e97ec72a4b7dc42ccc1f649790adb0/scss/mixins/_grid.scss#L41\n\n    styles[key] = {\n      flexBasis: width,\n      flexGrow: 0,\n      maxWidth: width\n    };\n  }); // No need for a media query for the first size.\n\n  if (breakpoint === 'xs') {\n    _extends(globalStyles, styles);\n  } else {\n    globalStyles[theme.breakpoints.up(breakpoint)] = styles;\n  }\n}\n\nfunction getOffset(val, div = 1) {\n  const parse = parseFloat(val);\n  return `${parse / div}${String(val).replace(String(parse), '') || 'px'}`;\n}\n\nfunction generateGutter(theme, breakpoint) {\n  const styles = {};\n  SPACINGS.forEach(spacing => {\n    const themeSpacing = theme.spacing(spacing);\n\n    if (themeSpacing === 0) {\n      return;\n    }\n\n    styles[`spacing-${breakpoint}-${spacing}`] = {\n      margin: `-${getOffset(themeSpacing, 2)}`,\n      width: `calc(100% + ${getOffset(themeSpacing)})`,\n      '& > $item': {\n        padding: getOffset(themeSpacing, 2)\n      }\n    };\n  });\n  return styles;\n} // Default CSS values\n// flex: '0 1 auto',\n// flexDirection: 'row',\n// alignItems: 'flex-start',\n// flexWrap: 'nowrap',\n// justifyContent: 'flex-start',\n\n\nexport const styles = theme => _extends({\n  /* Styles applied to the root element. */\n  root: {},\n\n  /* Styles applied to the root element if `container={true}`. */\n  container: {\n    boxSizing: 'border-box',\n    display: 'flex',\n    flexWrap: 'wrap',\n    width: '100%'\n  },\n\n  /* Styles applied to the root element if `item={true}`. */\n  item: {\n    boxSizing: 'border-box',\n    margin: '0' // For instance, it's useful when used with a `figure` element.\n\n  },\n\n  /* Styles applied to the root element if `zeroMinWidth={true}`. */\n  zeroMinWidth: {\n    minWidth: 0\n  },\n\n  /* Styles applied to the root element if `direction=\"column\"`. */\n  'direction-xs-column': {\n    flexDirection: 'column'\n  },\n\n  /* Styles applied to the root element if `direction=\"column-reverse\"`. */\n  'direction-xs-column-reverse': {\n    flexDirection: 'column-reverse'\n  },\n\n  /* Styles applied to the root element if `direction=\"row-reverse\"`. */\n  'direction-xs-row-reverse': {\n    flexDirection: 'row-reverse'\n  },\n\n  /* Styles applied to the root element if `wrap=\"nowrap\"`. */\n  'wrap-xs-nowrap': {\n    flexWrap: 'nowrap'\n  },\n\n  /* Styles applied to the root element if `wrap=\"reverse\"`. */\n  'wrap-xs-wrap-reverse': {\n    flexWrap: 'wrap-reverse'\n  },\n\n  /* Styles applied to the root element if `alignItems=\"center\"`. */\n  'align-items-xs-center': {\n    alignItems: 'center'\n  },\n\n  /* Styles applied to the root element if `alignItems=\"flex-start\"`. */\n  'align-items-xs-flex-start': {\n    alignItems: 'flex-start'\n  },\n\n  /* Styles applied to the root element if `alignItems=\"flex-end\"`. */\n  'align-items-xs-flex-end': {\n    alignItems: 'flex-end'\n  },\n\n  /* Styles applied to the root element if `alignItems=\"baseline\"`. */\n  'align-items-xs-baseline': {\n    alignItems: 'baseline'\n  },\n\n  /* Styles applied to the root element if `alignContent=\"center\"`. */\n  'align-content-xs-center': {\n    alignContent: 'center'\n  },\n\n  /* Styles applied to the root element if `alignContent=\"flex-start\"`. */\n  'align-content-xs-flex-start': {\n    alignContent: 'flex-start'\n  },\n\n  /* Styles applied to the root element if `alignContent=\"flex-end\"`. */\n  'align-content-xs-flex-end': {\n    alignContent: 'flex-end'\n  },\n\n  /* Styles applied to the root element if `alignContent=\"space-between\"`. */\n  'align-content-xs-space-between': {\n    alignContent: 'space-between'\n  },\n\n  /* Styles applied to the root element if `alignContent=\"space-around\"`. */\n  'align-content-xs-space-around': {\n    alignContent: 'space-around'\n  },\n\n  /* Styles applied to the root element if `justify=\"center\"`. */\n  'justify-xs-center': {\n    justifyContent: 'center'\n  },\n\n  /* Styles applied to the root element if `justify=\"flex-end\"`. */\n  'justify-xs-flex-end': {\n    justifyContent: 'flex-end'\n  },\n\n  /* Styles applied to the root element if `justify=\"space-between\"`. */\n  'justify-xs-space-between': {\n    justifyContent: 'space-between'\n  },\n\n  /* Styles applied to the root element if `justify=\"space-around\"`. */\n  'justify-xs-space-around': {\n    justifyContent: 'space-around'\n  },\n\n  /* Styles applied to the root element if `justify=\"space-evenly\"`. */\n  'justify-xs-space-evenly': {\n    justifyContent: 'space-evenly'\n  }\n}, generateGutter(theme, 'xs'), theme.breakpoints.keys.reduce((accumulator, key) => {\n  // Use side effect over immutability for better performance.\n  generateGrid(accumulator, theme, key);\n  return accumulator;\n}, {}));\nconst Grid = /*#__PURE__*/React.forwardRef(function Grid(props, ref) {\n  const {\n    alignContent = 'stretch',\n    alignItems = 'stretch',\n    classes,\n    className: classNameProp,\n    component: Component = 'div',\n    container = false,\n    direction = 'row',\n    item = false,\n    justify = 'flex-start',\n    lg = false,\n    md = false,\n    sm = false,\n    spacing = 0,\n    wrap = 'wrap',\n    xl = false,\n    xs = false,\n    zeroMinWidth = false\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"alignContent\", \"alignItems\", \"classes\", \"className\", \"component\", \"container\", \"direction\", \"item\", \"justify\", \"lg\", \"md\", \"sm\", \"spacing\", \"wrap\", \"xl\", \"xs\", \"zeroMinWidth\"]);\n\n  const className = clsx(classes.root, classNameProp, container && [classes.container, spacing !== 0 && classes[`spacing-xs-${String(spacing)}`]], item && classes.item, zeroMinWidth && classes.zeroMinWidth, direction !== 'row' && classes[`direction-xs-${String(direction)}`], wrap !== 'wrap' && classes[`wrap-xs-${String(wrap)}`], alignItems !== 'stretch' && classes[`align-items-xs-${String(alignItems)}`], alignContent !== 'stretch' && classes[`align-content-xs-${String(alignContent)}`], justify !== 'flex-start' && classes[`justify-xs-${String(justify)}`], xs !== false && classes[`grid-xs-${String(xs)}`], sm !== false && classes[`grid-sm-${String(sm)}`], md !== false && classes[`grid-md-${String(md)}`], lg !== false && classes[`grid-lg-${String(lg)}`], xl !== false && classes[`grid-xl-${String(xl)}`]);\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: className,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Grid.propTypes = {\n  /**\n   * Defines the `align-content` style property.\n   * It's applied for all screen sizes.\n   */\n  alignContent: PropTypes.oneOf(['stretch', 'center', 'flex-start', 'flex-end', 'space-between', 'space-around']),\n\n  /**\n   * Defines the `align-items` style property.\n   * It's applied for all screen sizes.\n   */\n  alignItems: PropTypes.oneOf(['flex-start', 'center', 'flex-end', 'stretch', 'baseline']),\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, the component will have the flex *container* behavior.\n   * You should be wrapping *items* with a *container*.\n   */\n  container: PropTypes.bool,\n\n  /**\n   * Defines the `flex-direction` style property.\n   * It is applied for all screen sizes.\n   */\n  direction: PropTypes.oneOf(['row', 'row-reverse', 'column', 'column-reverse']),\n\n  /**\n   * If `true`, the component will have the flex *item* behavior.\n   * You should be wrapping *items* with a *container*.\n   */\n  item: PropTypes.bool,\n\n  /**\n   * Defines the `justify-content` style property.\n   * It is applied for all screen sizes.\n   */\n  justify: PropTypes.oneOf(['flex-start', 'center', 'flex-end', 'space-between', 'space-around', 'space-evenly']),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `lg` breakpoint and wider screens if not overridden.\n   */\n  lg: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `md` breakpoint and wider screens if not overridden.\n   */\n  md: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `sm` breakpoint and wider screens if not overridden.\n   */\n  sm: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * Defines the space between the type `item` component.\n   * It can only be used on a type `container` component.\n   */\n  spacing: PropTypes.oneOf(SPACINGS),\n\n  /**\n   * Defines the `flex-wrap` style property.\n   * It's applied for all screen sizes.\n   */\n  wrap: PropTypes.oneOf(['nowrap', 'wrap', 'wrap-reverse']),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `xl` breakpoint and wider screens.\n   */\n  xl: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for all the screen sizes with the lowest priority.\n   */\n  xs: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * If `true`, it sets `min-width: 0` on the item.\n   * Refer to the limitations section of the documentation to better understand the use case.\n   */\n  zeroMinWidth: PropTypes.bool\n} : void 0;\nconst StyledGrid = withStyles(styles, {\n  name: 'MuiGrid'\n})(Grid);\n\nif (process.env.NODE_ENV !== 'production') {\n  const requireProp = requirePropFactory('Grid');\n  StyledGrid.propTypes = _extends({}, StyledGrid.propTypes, {\n    alignContent: requireProp('container'),\n    alignItems: requireProp('container'),\n    direction: requireProp('container'),\n    justify: requireProp('container'),\n    lg: requireProp('item'),\n    md: requireProp('item'),\n    sm: requireProp('item'),\n    spacing: requireProp('container'),\n    wrap: requireProp('container'),\n    xs: requireProp('item'),\n    zeroMinWidth: requireProp('item')\n  });\n}\n\nexport default StyledGrid;"]},"metadata":{},"sourceType":"module"}